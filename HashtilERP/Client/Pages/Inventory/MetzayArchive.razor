@page "/inventory/metzayarchive"
@inject IJSRuntime jsRuntime

@using System.Security.Claims;

@using Microsoft.AspNetCore.Authorization
@using ZXingBlazor.Components
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Spinner
@using HashtilERP.Shared.Models
@using Syncfusion.Blazor.Inputs
@using Microsoft.AspNetCore.SignalR.Client
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Data

@inject NavigationManager NavigationManager
@inject HttpClient Http

@attribute [Authorize(Roles = "Administrator,Viewer,Manager-GreenHouse,Agronomist,AuditAvgCounter,Manager-Oren")]
<div style="text-align:right" class="alert alert-dark" role="alert">
    <h3 style="text-align:center">מצאי - ארכיון</h3>
</div>



@if (K_Passports == null)
{
    <div class="col-sm">
        <div class="spin-row">
            <SfSpinner Size="40" Label="" Type="SpinnerType.Bootstrap4" CssClass="e-customClass" Visible="true"></SfSpinner>
        </div>
    </div>
}
@*Toast Component*@
<SfToast @ref="ToastObj" ID="toast_default" Title="" Timeout=3000 Icon="e-meeting" EnableRtl="true" Content="@ToastContent">
    <ToastPosition X="Center"></ToastPosition>
</SfToast>

@*Custom Edit Dialog*@
<SfDialog Width="325px" MinHeight="430px" EnableRtl="true" ShowCloseIcon="true" IsModal="true" @bind-Visible="@GridEditModalVisible">
    <DialogTemplates>
        <Header>
            <div style="text-align:right" class="alert alert-success" role="alert">
                פספורט:<b>@K_Passport.PassportNum</b> <br />
            </div>
            <div class="alert alert-primary" style="font-weight:bold" role="alert">
                @K_Passport.Gidul
                @K_Passport.Zan
            </div>
        </Header>
        <Content>
            <div class="spin-row">
                <SfSpinner Size="40" Label="" Type="SpinnerType.Bootstrap4" CssClass="e-customClass" Visible="@EditPassBool"></SfSpinner>
            </div>
            <div class="form-row" dir="rtl">
                <div class="form-group col-md-5">
                    <label class="e-float-text e-label-top" style="text-align: right; font-weight:500">חממה:</label>
                    <label class="e-float-text e-label-top" style="text-align:right">@K_Passport.Hamama</label>
                </div>
                <div class="form-group col-md-5">
                    <label class="e-float-text e-label-top" style="text-align:right;font-weight:500" hidden="hidden"></label>
                    @*Select a hamama*@
                    <input type="text" class="form-control" @bind="InputHamama" placeholder="שינוי חממה" />
                </div>
            </div>

            <div class="form-row" dir="rtl">
                <div class="form-group col-md-5">
                    <label class="e-float-text e-label-top" style="text-align:right;font-weight:500">גמלון</label>
                    <label class="e-float-text e-label-top" style="text-align:right">@K_Passport.Gamlon</label>
                </div>
                <div class="form-group col-md-5">
                    <label class="e-float-text e-label-top" style="text-align:right;font-weight:500" hidden="hidden"></label>
                    @*Select a gamlon*@
                    <input type="text" class="form-control" @bind="InputGamlon" placeholder="שינוי גמלון" />

                </div>
            </div>

            <div class="form-row" dir="rtl">
                <SfSpinner Size="40" Label="" Type="SpinnerType.Bootstrap4" CssClass="e-customClass" Visible="@SpinnerBool"></SfSpinner>

                <div class="form-group col-md-6">
                    <label class="e-float-text e-label-top" style="text-align:right">מגשים</label>
                    <SfNumericTextBox ID="Freight" @bind-Value="@(K_Passport.MagashAmount)" TValue="int?" EnableRtl="true"></SfNumericTextBox>

                </div>
            </div>
        </Content>
        <FooterTemplate>
            <button class="btn btn-success" @onclick="@(_ => {  SendMetzayEdit(K_Passport);})">שמירה</button>
            <button class="btn btn-danger" @onclick="@(_ => {CloseCustomEditDialog();})" style="margin-left:10px">ביטול</button>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>
@{
    var Tool = (new List<string>() { "Search" });
}
@*GRID SECTION START HERE*@
<SfGrid DataSource="@K_Passports" @ref="@SfGrid" Toolbar=@Tool AllowGrouping="false" AllowFiltering="true" EnableRtl="true" AllowSorting="true" AllowResizing="true">

    <GridEvents TValue="K_Passport"></GridEvents>
    <GridEvents QueryCellInfo="CustomizeCell" RowDataBound="RowBound" CommandClicked="OnCommandClicked" TValue="K_Passport"></GridEvents>
    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.CheckBox"></GridFilterSettings>

    <GridTemplates>

        <DetailTemplate>

            <div style="text-align:right;width:auto">
                <SfTab HeaderPlacement="HeaderPosition.Top">
                    <TabItems>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="לקוחות"></TabHeader>
                            </ChildContent>

                            <ContentTemplate>
                                @{ var passport = (context as K_Passport);
                                    <table class="table table-striped table-hover" style="text-align:right;width:auto">
                                        <thead>
                                            <tr>
                                                <th>
                                                    לקוח
                                                </th>
                                                <th>
                                                    הזמנה
                                                </th>
                                                <th>
                                                    מגשים
                                                </th>
                                                 <th>
                                                    ת.הוצאה
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @foreach (var cx in passport.Passport.Passprods.OrderByDescending(x => x.UQuantity))
                                            {
                                                var temp = (cx.UQuantity * 1000);
                                                var display = string.Format("{0:#,0}", temp);
                                                var startAvg = Convert.ToInt32((passport.Passport.UQuanOrdP * 1000) / passport.Passport.UTraySow);
                                                var magashPercx = (cx.UQuantity * 1000) / startAvg;
                                                var magashPercxScreen = string.Format("{0:#,0}", magashPercx);
                                            <tr>
                                                <td>
                                                    @cx.UCustName
                                                </td>
                                                <td>
                                                    @display
                                                </td>
                                                <td>
                                                    @magashPercxScreen
                                                </td>
                                                <td>
                                                    @Convert.ToDateTime(cx.UDateSupp).ToShortDateString()
                                                </td>
                                            </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                            </ContentTemplate>
                        </TabItem>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="הערות"></TabHeader>
                            </ChildContent>
                            <ContentTemplate>
                                @{ var passport1 = (context as K_Passport);
                                    <table class="table table-striped table-hover" style="text-align:right;width:auto">
                                        <thead>
                                            <tr>
                                                <th>
                                                    תאריך
                                                </th>
                                                <th>
                                                    נוספה ע"י
                                                </th>
                                                <th>
                                                    מצב
                                                </th>
                                                <th>
                                                    תיאור
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @foreach (var form in passport1.PassportAuditForms.OrderByDescending(x => x.CreateDate))
                                            {
                                                if (passport1.PassportAuditForms.Count == 0)
                                                {
                                                    <tr>
                                                        <td>
                                                            אין
                                                        </td>
                                                        <td>
                                                            אין
                                                        </td>
                                                        <td>
                                                            אין
                                                        </td>
                                                        <td>
                                                            אין
                                                        </td>
                                                    </tr>
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td>
                                                            @form.CreateDate
                                                        </td>
                                                        <td>
                                                            @form.UserName
                                                        </td>
                                                        <td>
                                                            @form.AuditStatus
                                                        </td>
                                                        <td>
                                                            @form.Remark
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                }
                            </ContentTemplate>
                        </TabItem>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="היסטוריית עריכה"></TabHeader>
                            </ChildContent>
                            <ContentTemplate>
                                @{ var passport2 = (context as K_Passport);
                                    <table class="table table-striped table-hover" style="text-align:right;width:auto">
                                        <thead>
                                            <tr>
                                                <th>
                                                    תאריך
                                                </th>
                                                <th>
                                                    נערכה ע"י
                                                </th>
                                                <th>
                                                    תיאור
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var updateAudit in passport2.k_PassportAuditTblVer2s.OrderByDescending(x => x.Date))
                                            {

                                                <tr>
                                                    <td>
                                                        @updateAudit.Date
                                                    </td>
                                                    <td>
                                                        @updateAudit.UserName
                                                    </td>
                                                    <td>
                                                        @updateAudit.AuditString
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                            </ContentTemplate>
                        </TabItem>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="נתונים נוספים"></TabHeader>
                            </ChildContent>
                            <ContentTemplate>
                                @{ var passport2 = (context as K_Passport);
                                                                <div class="form-row" dir="rtl">
                                                                    <div class="col-form-label">
                                                                        @{ if (passport2.GrowingRoom == null)
                                                                            {
                                                                                <label class="form-check-label" style="text-align: right; font-weight:500">הוכנס ישירות למצאי ע"י</label>
                                                                            }
                                                                            else
                                                                            { <label class="form-check-label" style="text-align: right; font-weight:500">הוכנס לחדר הנבטה ע"י:</label>
                                                                            }
                                                                        }
                                                                    </div>
                                                                    <div class="col-form-label">
                                                                        <label class="form-check-label" style="text-align:right;">@passport2.KPassportInsertAudit.UserName</label>
                                                                    </div>
                                                                    <div class="col-form-label">
                                                                        <label class="form-check-label" style="text-align:right;">@passport2.KPassportInsertAudit.Date</label>
                                                                    </div>
                                                                </div>
                                    <div class="form-row" dir="rtl">
                                        <div class="col-form-label">
                                            <label class="form-check-label" style="text-align: right; font-weight:500">ממוצע SAP התחלתי:</label>
                                        </div>
                                        <div class="col-form-label">
                                            <label class="form-check-label" style="text-align:right">@passport2.PassportStartingAVG</label>
                                        </div>
                                    </div>
                                }
                            </ContentTemplate>
                        </TabItem>
                    </TabItems>
                </SfTab>

            </div>
        </DetailTemplate>

    </GridTemplates>
    <GridColumns>


        <GridColumn HeaderText="" TextAlign="TextAlign.Right" AutoFit="true">
            <GridCommandColumns>
                <AuthorizeView Roles="Administrator">
                    <GridCommandColumn Type=CommandButtonType.None
                                       ButtonOption="@(new CommandButtonOptions() { Content = "פריסה מחדש", CssClass = "e-success" })">
                    </GridCommandColumn>
                </AuthorizeView>
                <AuthorizeView Roles="Administrator">
                    <GridCommandColumn Type=CommandButtonType.Edit
                                       ButtonOption="@(new CommandButtonOptions() { Content = "עריכה", CssClass = "e-info" })">
                    </GridCommandColumn>
                </AuthorizeView>
            </GridCommandColumns>
        </GridColumn>


        <GridColumn Field=@nameof(K_Passport.K_PassportId) HeaderText="" HeaderTextAlign="TextAlign.Center" Type="ColumnType.Number" IsPrimaryKey="true" Visible="false" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.Hamama) HeaderText="חמ'" HeaderTextAlign="TextAlign.Center" Type="ColumnType.Number" Format="N0" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.Gamlon) HeaderText="גמ'" HeaderTextAlign="TextAlign.Center" Type="ColumnType.String" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.PassportNum) HeaderText="פספורט" FilterSettings="@(new FilterSettings{Operator = Syncfusion.Blazor.Operator.Contains})" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Type="ColumnType.Number" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.Gidul) HeaderText="גידול" FilterSettings="@(new FilterSettings{Operator = Syncfusion.Blazor.Operator.Contains})" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Type="ColumnType.String" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.Zan) HeaderText="זן" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Type="ColumnType.String" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.SowDate) HeaderText="ת.זריעה" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.DateEnd) HeaderText="ת.הוצאה" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.PassportAge) HeaderText="גיל" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Type="ColumnType.Number" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.MagashAmount) HeaderText="מגשים" HeaderTextAlign="TextAlign.Center" Type="ColumnType.Number" Format="N0" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field="@nameof(K_Passport.PassportAVG)" HeaderText="ממוצע" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Type="ColumnType.String" TextAlign="TextAlign.Center" AutoFit="true">
            <Template>
                @{
                    var value = (context as K_Passport);
                    var AVG = value.PassportAVG == -1 ? "ללא" : Convert.ToString(value.PassportAVG);
                    <b>@AVG</b>
                }
            </Template>
        </GridColumn>
        <GridColumn Field=@nameof(K_Passport.PassportStatus) HeaderText="סטטוס" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Type="ColumnType.String" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.PassportCondition) HeaderText="מצב" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Type="ColumnType.String" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field="@nameof(K_Passport.AutoPlantsCalc)" HeaderText="שתילים" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Format="N0" Type="ColumnType.Number" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.CelsTray) HeaderText="סוג מגש" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Format="N0" Type="ColumnType.Number" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
    </GridColumns>

</SfGrid>

@*Update Passport Hamama And Or Gamlon NULL Dialog Setting*@
<SfDialog Width="250px" IsModal="true" @bind-Visible="@IsVisible" EnableRtl="true">
    <DialogEvents OnOverlayClick="@OnOverlayclick">
    </DialogEvents>
    <DialogTemplates>
        <Header>שגיאה!</Header>
        <Content> @ModalError </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="אישור" IsPrimary="true" OnClick="@CloseDialog" />

    </DialogButtons>
</SfDialog>

@*Back On Active Passport Dialog Setting*@
<SfDialog Target="#target" EnableRtl="true"
          Width="250px"
          Height="175px"
          IsModal="true"
          ShowCloseIcon="false"
          @bind-Visible="@ActivVisability">
    <DialogTemplates>
        <Header>לפרוס פספורט?</Header>
        <Content>
            <div class="button-container">
                <button type="submit"
                        class="btn btn-success"
                        @onclick="ConfirmDestroyYes">
                    אישור
                </button>
                <button type="submit" style="margin-right:25px"
                        class="btn btn-danger"
                        @onclick="ConfirmDestroyNo">
                    ביטול
                </button>
            </div>
        </Content>
    </DialogTemplates>
</SfDialog>





@code {

        //REGION EDIT DIALOG
        #region Custom Edit Dialog
        //Edit dialog spinner
    public bool EditPassBool { get; set; } = false;
    //edit dialog Visabillity
    private bool GridEditModalVisible { get; set; } = false;
    //Custom Open Edit Dialog For Grid
    private void OpenCustomEditDialog()
    {
        this.GridEditModalVisible = true;
    }
    //Custom Close Edit Dialog For Grid
    private void CloseCustomEditDialog()
    {
        this.GridEditModalVisible = false;
        InputHamama = "";
        InputGamlon = "";
    }
    bool SpinnerBool { get; set; } = false;
    #endregion
    string InputHamama, InputGamlon;
    SfGrid<K_Passport> SfGrid;
    public void CloseUpdateDialog()
    {
        this.SfGrid.CloseEdit();
    }


    #region MODAL Hamama Gamlon NULL
    /// <summary>
    /// Modal Props and actions
    /// </summary>
    private bool IsVisible { get; set; } = false;

    //BackTo Active Passport MODAL VISABILITY
    private bool ActivVisability { get; set; } = false;

    //Confirm Passport MODAL VISABILITY
    private bool ConfirmPassportVisability { get; set; } = false;

    private string ModalError { get; set; } = "";

    private void OpenDialog()
    {
        this.IsVisible = true;
    }

    private void OnOverlayclick(MouseEventArgs arg)
    {
        this.IsVisible = false;
    }
    private void CloseDialog()
    {
        this.IsVisible = false;
    }
    #endregion



    #region TOAST
    //TOAST
    public SfToast ToastObj;
    private string ToastContent { get; set; } = "";
    private async Task ShowToast()
    {
        await this.ToastObj.Show();
    }

    private async Task HideToast()
    {
        await this.ToastObj.Hide("All");
    }
    #endregion

    public K_Passport K_Passport = new K_Passport();
    public K_Passport[] K_Passports;
    public PassportAuditForm PassportAuditForm = new PassportAuditForm();
    private HubConnection hubConnection;
    private static string HebSaved = "נשמר!";
    long passporrtId;

    // Property to control the delete dialog.
    public bool DeleteRecordConfirmVisibility { get; set; } = false;


    public async void SendMetzayEdit(K_Passport context)
    {
        EditPassBool = true;
        await UpdatePassport(context);
        EditPassBool = false;
    }

    //PUT K_Passport Green/Gamlon/Magash Amount
    public async Task<int> UpdatePassport(K_Passport context)
    {


        if (InputHamama != "")
        {
            if (InputGamlon != "")
            {
                if (GreenHouseToGamlon.CheckIfHamamaAndGamlonExsist(InputHamama, InputGamlon))
                {

                    context.Hamama = InputHamama;
                    context.Gamlon = InputGamlon;
                }
                else
                {

                    ModalError = "יש להזין חממה וגמלון מתאימים";
                    IsVisible = true;
                    return 1;
                }
            }
            else
            {
                if (GreenHouseToGamlon.CheckIfHamamaAndGamlonExsist(InputHamama))
                {
                    context.Hamama = InputHamama;

                }
                else
                {

                    ModalError = $"הערך {InputHamama} לא תקין";
                    IsVisible = true;
                    return 1;
                }
            }
        }
        if (InputHamama == "" && InputGamlon != "")
        {
            if (GreenHouseToGamlon.CheckIfHamamaAndGamlonExsist(context.Hamama.Trim(), InputGamlon))
            {

                InputHamama = context.Hamama.Trim();
                context.Gamlon = InputGamlon;
            }
            else
            {

                ModalError = "יש להזין חממה וגמלון מתאימים";
                IsVisible = true;
                return 1;
            }
        }
        if (context.MagashAmount == 0)
        {
            context.IsNeedToBeChecked = true;
        }
        var rslt = await Http.PutAsJsonAsync($"api/KPassports/{context.K_PassportId}", context);
        //Http Response Failed On Update
        if (!rslt.IsSuccessStatusCode)
        {

            ToastContent = rslt.StatusCode.ToString();
            StateHasChanged();
            await ShowToast();

        }
        else
        {


            if (IsConnected) await SendMessage();
            ToastContent = HebSaved;
            StateHasChanged();
            await ShowToast();
            CloseCustomEditDialog();
            InputHamama = "";
            InputGamlon = "";


        }

        return 0;
    }

    //Command Button Clicked In grid
    public void OnCommandClicked(CommandClickEventArgs<K_Passport> args)
    {
        ModalError = "";

        if (args.CommandColumn.ButtonOption.Content == "פריסה מחדש")
        {
            int yu = 0;
            if (args.RowData.PassportStatus == Status.Finished) { yu++; }

            K_Passport = PassportAlgorithm.ArgsToObject(args.RowData);
            K_Passport.PassportStatus = Status.InGreenHouse;
            K_Passport.PassportStatusCode = (int)PassportStatusCode.InsideGreenHouse;
            this.ActivVisability = true;
        }

        if (args.CommandColumn.ButtonOption.Content == "עריכה")
        {
            K_Passport = PassportAlgorithm.ArgsToObject(args.RowData);
            OpenCustomEditDialog();
        }
    }





    //DIALOG Activ CANCEL
    public void ConfirmDestroyNo()
    {
        this.ActivVisability = false;
    }

    //DIALOG Active CONFIRMED
    public async void ConfirmDestroyYes()
    {
        try
        {
            var rslt = await Http.PutAsJsonAsync($"api/KPassports/Thai/Passport/Update/{K_Passport.K_PassportId}", K_Passport);
            this.ActivVisability = false;

            if (rslt.IsSuccessStatusCode)
            {

                if (IsConnected) await SendMessage();
                ToastContent = HebSaved;
                StateHasChanged();
                await ShowToast();
                PassportAuditForm = new PassportAuditForm();
            }
        }
        catch (Exception e)
        {
            ToastContent = e.Message;
            await ShowToast();
        }
    }

    //INITIALIZED
    protected override async Task OnInitializedAsync()
    {

        InputHamama = "";
        InputGamlon = "";
        await LoadData();
        hubConnection = new HubConnectionBuilder()
.WithUrl(NavigationManager.ToAbsoluteUri("/broadcastHub"))
.Build();

        hubConnection.On("ReceiveMessage", () =>
        {
            CallLoadData();
            StateHasChanged();
        });

        await hubConnection.StartAsync();


    }

    private void CallLoadData()
    {
        Task.Run(async () =>
        {
            await LoadData();
        });
    }

    protected async Task LoadData()
    {
        try
        {
            K_Passports = await Http.GetFromJsonAsync<K_Passport[]>("api/KPassports/multi/" + "7");
            StateHasChanged();
        }

        catch (Exception e)
        {
            throw new Exception(e.Message);
        }
    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    Task SendMessage() => hubConnection.SendAsync("SendMessage");

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }


    //CELL MAGASH TYPE STYLE
    public void CustomizeCell(QueryCellInfoEventArgs<K_Passport> args)
    {
        if (args.Column.Field == "Passport.Oitm.UCelsTray")
        {
            if (Convert.ToDouble(args.Data.Passport.Oitm.UCelsTray) == 0.180)
            {
                args.Cell.AddClass(new string[] { "magash-180" });
            }
            else if (Convert.ToDouble(args.Data.Passport.Oitm.UCelsTray) == 0.187)
            {
                args.Cell.AddClass(new string[] { "magash-187" });
            }
            else if (Convert.ToDouble(args.Data.Passport.Oitm.UCelsTray) == 0.442)
            {
                args.Cell.AddClass(new string[] { "magash-442" });
            }
            else
            {
                args.Cell.AddClass(new string[] { "magash-308" });
            }
        }
        ////PASSPORT STYLE
        if (args.Column.Field == "PassportNum")
        {
            args.Cell.AddClass(new string[] { "passport" });
        }
        //HAMAMA STYLE
        if (args.Column.Field == "Hamama")
        {
            if (args.Data.Hamama.Trim() == "1")
            {
                args.Cell.AddClass(new string[] { "hamama1" });
            }
            else if (args.Data.Hamama.Trim() == "2")
            {
                args.Cell.AddClass(new string[] { "hamama2" });
            }
            else if (args.Data.Hamama.Trim() == "4")
            {
                args.Cell.AddClass(new string[] { "hamama4" });
            }
            else if (args.Data.Hamama.Trim() == "5")
            {
                args.Cell.AddClass(new string[] { "hamama5" });
            }
            else if (args.Data.Hamama.Trim() == "6")
            {
                args.Cell.AddClass(new string[] { "hamama6" });
            }
            else if (args.Data.Hamama.Trim() == "7")
            {
                args.Cell.AddClass(new string[] { "hamama7" });
            }
        }
    }

    //ROW IsNeedToBeAudit STYLE
    public void RowBound(RowDataBoundEventArgs<K_Passport> args)
    {
        args.Row.AddClass(new string[] { "is-need-to-be-audit" });
    }


}

<style>
    .magash-180 {
        background-color: plum;
    }

    .magash-187 {
        background-color: lightyellow;
    }

    .magash-442 {
        background-color: grey;
        font-weight: bold;
    }

    .magash-308 {
        background-color: darkseagreen;
        font-weight: bold;
    }

    .passport {
        background-color: powderblue;
        font-weight: bold;
        color: red;
    }

    .hamama1 {
        background-color: cornflowerblue;
        font-weight: bold;
    }

    .hamama2 {
        background-color: yellow;
        font-weight: bold;
    }

    .hamama4 {
        background-color: darkseagreen;
        font-weight: bold;
    }

    .hamama5 {
        background-color: gray;
        font-weight: bold;
    }

    .hamama6 {
        background-color: cadetblue;
        font-weight: bold;
    }

    .hamama7 {
        background-color: palevioletred;
        font-weight: bold;
    }


    #toast_default .e-toast-container {
        color: black;
        font-size: 13px;
        font-weight: normal;
    }

    /*   GRID ROW STYLE*/
    .is-need-to-be-audit {
        background-color: wheat;
    }

    .clean {
        background-color: white;
    }

    .form-group.col-md-6 {
        width: 200px;
    }

    label.e-float-text {
        position: relative;
        padding-left: 0;
        top: 10%;
    }
</style>