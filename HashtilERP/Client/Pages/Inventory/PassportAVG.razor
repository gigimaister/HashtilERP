@page "/inventory/passportavg"
@inject IJSRuntime jsRuntime


@using System.Net.Http;
@using Syncfusion.Blazor.Popups
@using Microsoft.AspNetCore.Authorization
@using ZXingBlazor.Components
@using Syncfusion.Blazor.Spinner
@using HashtilERP.Shared.Models
@using Microsoft.AspNetCore.SignalR.Client
@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations


@inject NavigationManager NavigationManager
@inject HttpClient Http

@attribute [Authorize(Roles = "Administrator,AuditAvgCounter")]

<h3 style="text-align:center">ממוצעים</h3>

@if (isDevice == "Mobile")
{
    <div style="text-align:right">
        <button class="btn btn-primary"
                type="button"
                @onclick="(() => ShowScanBarcode = !ShowScanBarcode)">
            @*ENTER SCAN*@
            סריקה
        </button>
    </div>
}



<br />
<br />
@*//Paasport Input*@
<div style="text-align:right">
    <input type="text" class="form-control" style="width:auto;" name="GRWroom"
           placeholder="פספורט"
           @bind=@passportInput />
</div>
<br />

@if (ShowScanBarcode)
{

    <BarcodeReader ScanResult="((e) => { passportInput = e; ScanDirectToEdit(); ShowScanBarcode = !ShowScanBarcode; })"
                   ShowScanBarcode="ShowScanBarcode"
                   Close="(() => ShowScanBarcode = !ShowScanBarcode)" />

}
<div style="text-align:right">
    <button class="btn btn-success"
            type="button"
            @onclick="@ScanDirectToEdit">
        @*ENTER SCAN*@
        שלח
    </button>
</div>
<br />
@if (K_Passports == null)
{
    <div class="col-sm">
        <div class="spin-row">
            <SfSpinner Size="40" Label="" Type="SpinnerType.Bootstrap4" CssClass="e-customClass" Visible="true"></SfSpinner>
        </div>
    </div>
}
@*controlled spinner buttons*@
<div class="col-sm">
    <div class="spin-row" style="z-index:0">
        <SfSpinner Size="40" Label="" Type="SpinnerType.Bootstrap4" CssClass="e-customClass" Visible="@SpinnerBool"></SfSpinner>
    </div>
</div>
@{
    var Tool = (new List<string>() { "Search", "Print" });

}

@*GRID SECTION START HERE*@
<SfGrid DataSource="@K_Passports"   @ref="@SfGrid" Toolbar=@Tool AllowFiltering="true" AllowSorting="true" EnableRtl="true" AllowResizing="true">

    <GridEvents TValue="K_Passport"></GridEvents>
    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.CheckBox"></GridFilterSettings>
    <GridTemplates>

        <DetailTemplate>

            <div style="text-align:right;width:auto">
                <SfTab HeaderPlacement="HeaderPosition.Top">
                    <TabItems>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="לקוחות"></TabHeader>
                            </ChildContent>

                            <ContentTemplate>
                                @{ var passport = (context as K_Passport);
                                    <table class="table table-striped table-hover" style="text-align:right;width:auto">
                                        <thead>
                                            <tr>
                                                <th>
                                                    לקוח
                                                </th>
                                                <th>
                                                    הזמנה
                                                </th>

                                            </tr>
                                        </thead>
                                        <tbody>

                                            @foreach (var cx in passport.Passport.Passprods)
                                            {
                                                var temp = (cx.UQuantity * 1000);
                                                var display = string.Format("{0:#,0}", temp);
                                                <tr>
                                                    <td>
                                                        @cx.UCustName
                                                    </td>
                                                    <td>
                                                        @display
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                            </ContentTemplate>
                        </TabItem>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="הערות"></TabHeader>
                            </ChildContent>
                            <ContentTemplate>
                                @{ var passport1 = (context as K_Passport);
                                    <table class="table table-striped table-hover" style="text-align:right;width:auto">
                                        <thead>
                                            <tr>
                                                <th>
                                                    תאריך
                                                </th>
                                                <th>
                                                    נוספה ע"י
                                                </th>
                                                <th>
                                                    מצב
                                                </th>
                                                <th>
                                                    תיאור
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @foreach (var form in passport1.PassportAuditForms.OrderByDescending(x => x.CreateDate))
                                            {
                                                if (passport1.PassportAuditForms.Count == 0)
                                                {
                                                    <tr>
                                                        <td>
                                                            אין
                                                        </td>
                                                        <td>
                                                            אין
                                                        </td>
                                                        <td>
                                                            אין
                                                        </td>
                                                        <td>
                                                            אין
                                                        </td>
                                                    </tr>
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td>
                                                            @form.CreateDate
                                                        </td>
                                                        <td>
                                                            @form.UserName
                                                        </td>
                                                        <td>
                                                            @form.AuditStatus
                                                        </td>
                                                        <td>
                                                            @form.Remark
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                }
                            </ContentTemplate>
                        </TabItem>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="היסטוריית עריכה"></TabHeader>
                            </ChildContent>
                            <ContentTemplate>
                                @{ var passport2 = (context as K_Passport);
                                    <table class="table table-striped table-hover" style="text-align:right;width:auto">
                                        <thead>
                                            <tr>
                                                <th>
                                                    תאריך
                                                </th>
                                                <th>
                                                    נערכה ע"י
                                                </th>
                                                <th>
                                                    תיאור
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var updateAudit in passport2.k_PassportAuditTblVer2s.OrderByDescending(x => x.Date))
                                            {

                                                <tr>
                                                    <td>
                                                        @updateAudit.Date
                                                    </td>
                                                    <td>
                                                        @updateAudit.UserName
                                                    </td>
                                                    <td>
                                                        @updateAudit.AuditString
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                            </ContentTemplate>
                        </TabItem>
                        <TabItem>
                            <ChildContent>
                                <TabHeader Text="נתונים נוספים"></TabHeader>
                            </ChildContent>
                            <ContentTemplate>
                                @{ var passport2 = (context as K_Passport);
                                    <div class="form-row" dir="rtl">
                                        <div class="col-form-label">
                                            <label class="form-check-label" style="text-align: right; font-weight:500">הוכנסה לחדר הנבטה ע"י:</label>
                                        </div>
                                        <div class="col-form-label">
                                            <label class="form-check-label" style="text-align:right;">@passport2.KPassportInsertAudit.UserName</label>
                                        </div>
                                    </div>
                                    <div class="form-row" dir="rtl">
                                        <div class="col-form-label">
                                            <label class="form-check-label" style="text-align: right; font-weight:500">ממוצע SAP התחלתי:</label>
                                        </div>
                                        <div class="col-form-label">
                                            <label class="form-check-label" style="text-align:right">@passport2.PassportStartingAVG</label>
                                        </div>
                                    </div>
                                }
                            </ContentTemplate>
                        </TabItem>
                    </TabItems>
                </SfTab>
            </div>
        </DetailTemplate>

    </GridTemplates>

    <GridAggregates>
        <GridAggregate>
            <GridAggregateColumns>
                <GridAggregateColumn Field=@nameof(K_Passport.MagashAmount) Type="AggregateType.Count">
                    <FooterTemplate>
                        @{
                            var aggregate = (context as AggregateTemplateContext);

                            <b>ספירה: @aggregate.Count</b>

                        }
                    </FooterTemplate>
                </GridAggregateColumn>
            </GridAggregateColumns>
        </GridAggregate>
        <GridAggregate>
            <GridAggregateColumns>
                <GridAggregateColumn Field=@nameof(K_Passport.MagashAmount) Type="AggregateType.Sum">
                    <FooterTemplate>
                        @{
                            var aggregate = (context as AggregateTemplateContext);
                            <div>
                                <b>סכום: @aggregate.Sum</b>
                            </div>
                        }
                    </FooterTemplate>
                </GridAggregateColumn>
            </GridAggregateColumns>
        </GridAggregate>
    </GridAggregates>

    <GridColumns>
        <GridColumn Field=@nameof(K_Passport.K_PassportId) HeaderText="" HeaderTextAlign="TextAlign.Center" Type="ColumnType.Number" IsPrimaryKey="true" Visible="false" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.AVGEnteringDate) HeaderText="תאריך" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.PassportNum) HeaderText="פספורט" FilterSettings="@(new FilterSettings{Operator = Syncfusion.Blazor.Operator.Contains})" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Type="ColumnType.Number" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.PassportAVG) HeaderText="ממוצע" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Type="ColumnType.String" TextAlign="TextAlign.Center" AutoFit="true"> </GridColumn>
        <GridColumn Field=@nameof(K_Passport.Hamama) HeaderText="חמ'" HeaderTextAlign="TextAlign.Center" Type="ColumnType.String" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.Gamlon) HeaderText="גמ'" HeaderTextAlign="TextAlign.Center" Type="ColumnType.String" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field="Passport.UItemDesc" HeaderText="גידול" FilterSettings="@(new FilterSettings{Operator = Syncfusion.Blazor.Operator.Contains})" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Type="ColumnType.String" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.PassportAge) HeaderText="גיל" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Type="ColumnType.Number" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.MagashAmount) HeaderText="מגש" HeaderTextAlign="TextAlign.Center" Type="ColumnType.Number" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.PlantsAmount) HeaderText="שתילים" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Format="N0" Type="ColumnType.Number" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
        <GridColumn Field=@nameof(K_Passport.CelsTray) HeaderText="סוג מגש" AllowEditing="false" HeaderTextAlign="TextAlign.Center" Format="N0" Type="ColumnType.Number" TextAlign="TextAlign.Center" AutoFit="true"></GridColumn>
    </GridColumns>

</SfGrid>


@*PassportAVG Modal*@
<SfDialog Width="250px" IsModal="true" @bind-Visible="@IsVisible">
    <DialogEvents OnOverlayClick="@OnOverlayclick">
    </DialogEvents>
    <DialogTemplates>
        <Content>

            <div class="form-group" style="text-align:right">
                <div class="alert alert-warning" role="alert">
                    <label for="formGroupExampleInput2"><b>פספורט: </b>@Passportnumber</label>
                </div>
                <div class="alert alert-success" role="alert">
                    <label for="formGroupExampleInput2"><b>זן: </b>@Passportgidul</label>
                </div>
            </div>
            <div class="form-group" style="text-align:right">
                <label for="formGroupExampleInput2">ממוצע חדש</label>
                <input type="text" style="text-align:right" @bind-value="@EditedAVG" class="form-control" id="formGroupExampleInput2" placeholder="">
            </div>
            <div class="form-group" style="text-align:right">
                <label for="formGroupExampleInput">ממוצע נוכחי</label>
                @{ if (CurrentAVG == "") { CurrentAVG = "לא הוזן עדיין"; }
                }
                <input type="text" style="text-align:right" class="form-control" id="formGroupExampleInput" placeholder="@CurrentAVG" readonly="readonly">
            </div>
            <SfSpinner Size="40" Label="" Type="SpinnerType.Bootstrap4" CssClass="e-customClass" Visible="@SpinnerBool"></SfSpinner>

            <div class="form-group" style="text-align:right">
                <label for="formGroupExampleInput2">ממוצע זריעה</label>
                <input type="number" style="text-align:right" class="form-control" id="formGroupExampleInput2" placeholder="@SapAVG" readonly="readonly">
            </div>
            <div class="button-container">
                <button type="submit" style="margin-right:25px"
                        class="btn btn-danger" @onclick="@CancelEditPassportAVG">
                    ביטול
                </button>
                <button type="submit"
                        class="btn btn-success" @onclick="@SubmitAVGEditDialog">
                    אישור
                </button>
            </div>

        </Content>
    </DialogTemplates>
</SfDialog>

@*Error Modal*@
<SfDialog Width="250px" IsModal="true" @bind-Visible="@ErrorModalIsVisible" EnableRtl="true">
    <DialogEvents OnOverlayClick="@OnOverlayErrorModalClick">
    </DialogEvents>
    <DialogTemplates>
        <Header> שגיאה! </Header>
        <Content> @ModalErrorContent </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="OK" IsPrimary="true" OnClick="@CloseErrorModal" />

    </DialogButtons>
</SfDialog>

@*Toast Component*@
<SfToast @ref="ToastObj" Title="" Timeout=3000 Icon="e-meeting" EnableRtl="true" Content="@ToastContent">
    <ToastPosition X="Center"></ToastPosition>
</SfToast>

@code {
    string passportInput, CurrentAVG, SapAVG, Passportnumber, Passportgidul;
    public K_Passport K_Passport = new K_Passport();
    public K_Passport[] K_Passports;
    private HubConnection hubConnection;
    SfGrid<K_Passport> SfGrid;
    bool ShowScanBarcode { get; set; } = false;
    public int? BarCode { get; set; }
    private string isDevice { get; set; }
    private bool mobile { get; set; }

    int EditedAVG;
    bool SpinnerBool { get; set; } = false;

    //Check if userAgent is Pc Or Mobile
    public async Task FindResponsiveness()
    {
        mobile = await jsRuntime.InvokeAsync<bool>("isDevice");
        isDevice = mobile ? "Mobile" : "Desktop";

    }

    //DIALOG SETTINGS FOR AVG
    private bool IsVisible { get; set; } = false;
    private void OpenDialog()
    {
        this.IsVisible = true;
    }
    private void OnOverlayclick(MouseEventArgs arg)
    {
        this.IsVisible = false;
        EditedAVG = 0;
    }



    //HubCon
    #region HubCon


    Task SendMessage() => hubConnection.SendAsync("SendMessage");



    #endregion

    //ERROR Modal
    #region Error Modal
    private bool ErrorModalIsVisible { get; set; } = false;
    private string ModalErrorContent { get; set; } = "";

    private void OnOverlayErrorModalClick(MouseEventArgs arg)
    {
        this.ErrorModalIsVisible = false;
    }
    private void CloseErrorModal()
    {
        this.ErrorModalIsVisible = false;
    }
    #endregion

    //Toast
    #region Toast

    SfToast ToastObj;
    private string ToastContent { get; set; } = "";

    private async Task ShowToast()
    {
        await this.ToastObj.Show();
    }

    private async Task HideToast()
    {
        await this.ToastObj.Hide("All");
    }
    #endregion


    //INITIALIZED
    protected override async Task OnInitializedAsync()
    {
        await FindResponsiveness();
        hubConnection = new HubConnectionBuilder()
    .WithUrl(NavigationManager.ToAbsoluteUri("/broadcastHub"))
    .Build();

        hubConnection.On("ReceiveMessage", () =>
        {
            CallLoadData();
            StateHasChanged();
        });

        await hubConnection.StartAsync();

        await LoadData();
    }

    private void CallLoadData()
    {
        Task.Run(async () =>
        {
            await LoadData();
        });
    }

    protected async Task LoadData()
    {

        K_Passports = await Http.GetFromJsonAsync<K_Passport[]>("api/KPassports/multi/" + "6");
        StateHasChanged();
    }
    public bool IsConnected =>
   hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }

    public async void ScanDirectToEdit()
    {
        SpinnerBool = true;
        await EditPassportAVG();
        SpinnerBool = false;
    }
    public async void SubmitAVGEditDialog()
    {
        SpinnerBool = true;
        await SendPassportAVG();
        SpinnerBool = false;
    }

    //EDIT/SEND NEW AVG
    public async Task EditPassportAVG()
    {
        try
        {
            SpinnerBool = true;
            //GET PASSPORT OBJECT FROM SCAN
            K_Passport = await Http.GetFromJsonAsync<K_Passport>("api/KPassports/Thai/GreenHouse/" + passportInput);
            if(K_Passport.PassportStatus == Status.InGreenHouse)
            {


                CurrentAVG = K_Passport.PassportAVG.ToString();
                SapAVG = K_Passport.PassportStartingAVG.ToString();
                Passportnumber = K_Passport.PassportNum.ToString();
                Passportgidul = K_Passport.Zan;
                OpenDialog();
                SpinnerBool = false;
                if (IsConnected) await SendMessage();
            }
            else
            {
                SpinnerBool = false;
                ModalErrorContent = "פספורט חייב להיות פרוס בחממות!";
                ErrorModalIsVisible = true;
                if (IsConnected) await SendMessage();
            }

        }
        catch (Exception)
        {
            SpinnerBool = false;
            ModalErrorContent = "לא נמצאו תוצאות";
            ErrorModalIsVisible = true;
            if (IsConnected) await SendMessage();

        }

    }

    //EDIT PASSPORT AVG MODAL BUTTONS
    public async Task SendPassportAVG()
    {
        SpinnerBool = true;
        //if AVG > magash type
        if (EditedAVG > K_Passport.CelsTray)
        {
            ModalErrorContent = "ממוצע גבוה מסוג מגש";
            ErrorModalIsVisible = true;
            if (IsConnected) await SendMessage();
            SpinnerBool = false;
        }
        else
        {
            K_Passport.PassportAVG = EditedAVG;
            K_Passport.AVGEnteringDate = DateTime.Now;
            if (PassportAlgorithm.IsAVGLow(K_Passport))
            {
                K_Passport.IsLowAVG = true;
            }

            try
            {
                var rslt = await Http.PutAsJsonAsync($"api/KPassports/{K_Passport.K_PassportId}", K_Passport);
                //Http Response Failed On Update
                if (!rslt.IsSuccessStatusCode)
                {
                    SpinnerBool = false;
                    ModalErrorContent = rslt.ReasonPhrase;
                    ErrorModalIsVisible = true;
                    if (IsConnected) await SendMessage();
                    passportInput = "";
                }
                else
                {
                    if (IsConnected) await SendMessage();
                    SpinnerBool = false;
                    //OK
                    this.IsVisible = false;
                    ToastContent = "נשמר!";
                    StateHasChanged();
                    await ShowToast();
                    passportInput = "";
                    EditedAVG = 0;

                }
            }
            catch (Exception e)
            {
                SpinnerBool = false;
                if (IsConnected) await SendMessage();
                this.IsVisible = false;
                ToastContent = e.Message;
                StateHasChanged();
                await ShowToast();
            }
        }

    }
    public void CancelEditPassportAVG()
    {
        this.IsVisible = false;
        EditedAVG = 0;
        passportInput = "";
    }

    //EXPORT TO PDF
    public async Task PdfExport()
    {
        await this.SfGrid.PdfExport();
    }
}