// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace HashtilERP.DBTestVol1
{
    public partial class OrdersContext : DbContext
    {
        public OrdersContext()
        {
        }

        public OrdersContext(DbContextOptions<OrdersContext> options)
            : base(options)
        {
        }

        public virtual DbSet<KOrder> KOrder { get; set; }
        public virtual DbSet<KOrderPassports> KOrderPassports { get; set; }
        public virtual DbSet<KPassport> KPassport { get; set; }
        public virtual DbSet<KPassportAuditTblVer2> KPassportAuditTblVer2 { get; set; }
        public virtual DbSet<KPassportInsertAudit> KPassportInsertAudit { get; set; }
        public virtual DbSet<Ocrd> Ocrd { get; set; }
        public virtual DbSet<Oitm> Oitm { get; set; }
        public virtual DbSet<Ordr> Ordr { get; set; }
        public virtual DbSet<Owor> Owor { get; set; }
        public virtual DbSet<Passport> Passport { get; set; }
        public virtual DbSet<PassportAuditForm> PassportAuditForm { get; set; }
        public virtual DbSet<Passprod> Passprod { get; set; }
        public virtual DbSet<Rdr1> Rdr1 { get; set; }
        public virtual DbSet<UpdateKPassportAudit> UpdateKPassportAudit { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasDefaultSchema("db_datareader")
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP850_CI_AS");

            modelBuilder.Entity<KOrder>(entity =>
            {
                entity.HasKey(e => e.JobId);

                entity.ToTable("K_Order");

                entity.Property(e => e.CardCode).HasMaxLength(50);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CxName).HasMaxLength(50);

                entity.Property(e => e.DeliveryRemarks).HasMaxLength(50);

                entity.Property(e => e.FixedCoordinationRemark).HasMaxLength(50);

                entity.Property(e => e.Gidul).HasMaxLength(50);

                entity.Property(e => e.HamamaRemarks).HasMaxLength(50);

                entity.Property(e => e.ItemCode).HasMaxLength(50);

                entity.Property(e => e.JobStatus).HasMaxLength(50);

                entity.Property(e => e.KOrderEnteringDate)
                    .HasColumnType("datetime")
                    .HasColumnName("K_OrderEnteringDate");

                entity.Property(e => e.MarketingDate).HasColumnType("datetime");

                entity.Property(e => e.OpenCoordinationRemark).HasMaxLength(1000);

                entity.Property(e => e.PassprodComments).HasMaxLength(50);

                entity.Property(e => e.PrepReportEnteringDate).HasColumnType("datetime");

                entity.Property(e => e.SaleNum).HasMaxLength(50);

                entity.Property(e => e.UserName).HasMaxLength(50);

                entity.Property(e => e.Zan).HasMaxLength(50);
            });

            modelBuilder.Entity<KOrderPassports>(entity =>
            {
                entity.HasKey(e => e.PassportsToOrdersId);

                entity.ToTable("K_OrderPassports");

                entity.Property(e => e.PassportsToOrdersId).ValueGeneratedNever();

                entity.Property(e => e.KPassportId).HasColumnName("K_PassportId");
            });

            modelBuilder.Entity<KPassport>(entity =>
            {
                entity.ToTable("K_Passport");

                entity.Property(e => e.KPassportId).HasColumnName("K_PassportId");

                entity.Property(e => e.AvgenteringDate)
                    .HasColumnType("datetime")
                    .HasColumnName("AVGEnteringDate");

                entity.Property(e => e.DateEnd).HasColumnType("date");

                entity.Property(e => e.Gamlon)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.Gidul).HasMaxLength(50);

                entity.Property(e => e.GrowingRoom).HasMaxLength(1);

                entity.Property(e => e.GrowingRoomExitDay).HasColumnType("datetime");

                entity.Property(e => e.Hamama)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.IsLowAvg).HasColumnName("IsLowAVG");

                entity.Property(e => e.ItemCode).HasMaxLength(20);

                entity.Property(e => e.MetzayEnteringDate).HasColumnType("datetime");

                entity.Property(e => e.MetzayOutGoingDate).HasColumnType("datetime");

                entity.Property(e => e.PassportAvg).HasColumnName("PassportAVG");

                entity.Property(e => e.PassportCondition).HasMaxLength(50);

                entity.Property(e => e.PassportStartingAvg).HasColumnName("PassportStartingAVG");

                entity.Property(e => e.PassportStatus).HasMaxLength(50);

                entity.Property(e => e.PlantsAmount).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.SaveForCxRemarks).HasMaxLength(1000);

                entity.Property(e => e.SowDate).HasColumnType("datetime");

                entity.Property(e => e.UserName).HasMaxLength(50);

                entity.Property(e => e.Zan).HasMaxLength(50);
            });

            modelBuilder.Entity<KPassportAuditTblVer2>(entity =>
            {
                entity.ToTable("K_PassportAuditTblVer2");

                entity.Property(e => e.AuditString).HasMaxLength(1000);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.KPassportId).HasColumnName("K_PassportId");

                entity.Property(e => e.UserName).HasMaxLength(50);
            });

            modelBuilder.Entity<KPassportInsertAudit>(entity =>
            {
                entity.HasKey(e => e.KPassportId)
                    .HasName("PK_K_PassportInsertAudit_1");

                entity.ToTable("K_PassportInsertAudit");

                entity.Property(e => e.KPassportId)
                    .ValueGeneratedNever()
                    .HasColumnName("K_PassportId");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.UserName).HasMaxLength(50);
            });

            modelBuilder.Entity<Ocrd>(entity =>
            {
                entity.HasKey(e => e.CardCode)
                    .HasName("OCRD_PRIMARY");

                entity.ToTable("OCRD", "dbo");

                entity.HasIndex(e => e.DocEntry, "OCRD_ABS_ENTRY")
                    .IsUnique();

                entity.HasIndex(e => e.CardName, "OCRD_CARD_NAME");

                entity.HasIndex(e => e.CardType, "OCRD_CARD_TYPE");

                entity.HasIndex(e => e.CommGrCode, "OCRD_COM_GROUP");

                entity.HasIndex(e => e.Currency, "OCRD_CURRENCY");

                entity.HasIndex(e => e.FatherCard, "OCRD_FATHER");

                entity.HasIndex(e => e.OwnerCode, "OCRD_OWNER_CODE");

                entity.HasIndex(e => e.DebPayAcct, "OCRD_PAY_ACCT");

                entity.HasIndex(e => e.ListNum, "OCRD_PRICE_LIST");

                entity.HasIndex(e => e.GroupNum, "OCRD_TERMS");

                entity.Property(e => e.CardCode).HasMaxLength(15);

                entity.Property(e => e.AccCritria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.AddId)
                    .HasMaxLength(64)
                    .HasColumnName("AddID");

                entity.Property(e => e.AddrType).HasMaxLength(100);

                entity.Property(e => e.Address).HasMaxLength(100);

                entity.Property(e => e.Affiliate)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.AgentCode).HasMaxLength(32);

                entity.Property(e => e.AliasName).HasColumnType("ntext");

                entity.Property(e => e.Attachment).HasColumnType("ntext");

                entity.Property(e => e.AutoCalBcg)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AutoCalBCG")
                    .IsFixedLength(true);

                entity.Property(e => e.AutoPost)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.BackOrder)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.BalTrnsfrd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Balance).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BalanceFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BalanceFC");

                entity.Property(e => e.BalanceSys).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BankCode).HasMaxLength(30);

                entity.Property(e => e.BankCountr).HasMaxLength(3);

                entity.Property(e => e.BankCtlKey).HasMaxLength(2);

                entity.Property(e => e.Bcacode)
                    .HasMaxLength(3)
                    .HasColumnName("BCACode");

                entity.Property(e => e.BillToDef).HasMaxLength(50);

                entity.Property(e => e.Block).HasMaxLength(100);

                entity.Property(e => e.BlockComm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.BlockDunn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Bnkcounter).HasColumnName("BNKCounter");

                entity.Property(e => e.BoEdiscnt)
                    .HasMaxLength(15)
                    .HasColumnName("BoEDiscnt");

                entity.Property(e => e.BoEonClct)
                    .HasMaxLength(15)
                    .HasColumnName("BoEOnClct");

                entity.Property(e => e.BoEprsnt)
                    .HasMaxLength(15)
                    .HasColumnName("BoEPrsnt");

                entity.Property(e => e.Box1099).HasMaxLength(20);

                entity.Property(e => e.Building).HasColumnType("ntext");

                entity.Property(e => e.Business).HasColumnType("ntext");

                entity.Property(e => e.CardFname)
                    .HasMaxLength(100)
                    .HasColumnName("CardFName");

                entity.Property(e => e.CardName).HasMaxLength(100);

                entity.Property(e => e.CardType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.CardValid).HasColumnType("datetime");

                entity.Property(e => e.Cdpnum).HasColumnName("CDPNum");

                entity.Property(e => e.Cellular).HasMaxLength(50);

                entity.Property(e => e.CertBkeep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CertBKeep")
                    .IsFixedLength(true);

                entity.Property(e => e.CertWht)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CertWHT")
                    .IsFixedLength(true);

                entity.Property(e => e.ChainStore)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("chainStore")
                    .IsFixedLength(true);

                entity.Property(e => e.ChannlBp)
                    .HasMaxLength(15)
                    .HasColumnName("ChannlBP");

                entity.Property(e => e.ChecksBal).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.City).HasMaxLength(100);

                entity.Property(e => e.CmpPrivate)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.CntctPrsn).HasMaxLength(90);

                entity.Property(e => e.CollecAuth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Commission).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ConCerti).HasMaxLength(20);

                entity.Property(e => e.ConnBp)
                    .HasMaxLength(15)
                    .HasColumnName("ConnBP");

                entity.Property(e => e.Country).HasMaxLength(3);

                entity.Property(e => e.County).HasMaxLength(100);

                entity.Property(e => e.CrCardNum).HasMaxLength(64);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.CreditLine).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.CrtfcateNo)
                    .HasMaxLength(20)
                    .HasColumnName("CrtfcateNO");

                entity.Property(e => e.Currency).HasMaxLength(3);

                entity.Property(e => e.DataSource)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DateFrom).HasColumnType("datetime");

                entity.Property(e => e.DateTill).HasColumnType("datetime");

                entity.Property(e => e.DatevFirst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DdctFileNo).HasMaxLength(9);

                entity.Property(e => e.DdctOffice).HasMaxLength(10);

                entity.Property(e => e.DdctPrcnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DdctStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DebPayAcct).HasMaxLength(15);

                entity.Property(e => e.DebtLine).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DeferrTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Deleted)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DflAccount).HasMaxLength(50);

                entity.Property(e => e.DflBranch).HasMaxLength(50);

                entity.Property(e => e.DflIban)
                    .HasMaxLength(50)
                    .HasColumnName("DflIBAN");

                entity.Property(e => e.DflSwift).HasMaxLength(50);

                entity.Property(e => e.DiscInRet)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DiscRel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Discount).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Dme)
                    .HasMaxLength(5)
                    .HasColumnName("DME");

                entity.Property(e => e.DnoteBalFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("DNoteBalFC");

                entity.Property(e => e.DnoteBalSy)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("DNoteBalSy");

                entity.Property(e => e.DnotesBal)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("DNotesBal");

                entity.Property(e => e.DpmClear).HasMaxLength(15);

                entity.Property(e => e.DpmIntAct).HasMaxLength(15);

                entity.Property(e => e.DscntRel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DunTerm).HasMaxLength(25);

                entity.Property(e => e.DunnDate).HasColumnType("datetime");

                entity.Property(e => e.EMail)
                    .HasMaxLength(100)
                    .HasColumnName("E_Mail");

                entity.Property(e => e.EcvatGroup)
                    .HasMaxLength(8)
                    .HasColumnName("ECVatGroup");

                entity.Property(e => e.EdocExpFrm).HasColumnName("EDocExpFrm");

                entity.Property(e => e.EmplymntCt).HasMaxLength(2);

                entity.Property(e => e.Equ)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ExcptnlEvt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ExemptNo).HasMaxLength(50);

                entity.Property(e => e.ExpireDate).HasColumnType("datetime");

                entity.Property(e => e.ExpnPrfFnd).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ExportCode).HasMaxLength(8);

                entity.Property(e => e.FatherCard).HasMaxLength(15);

                entity.Property(e => e.FatherType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Fax).HasMaxLength(20);

                entity.Property(e => e.FeeAcc).HasMaxLength(15);

                entity.Property(e => e.FreeText)
                    .HasColumnType("ntext")
                    .HasColumnName("Free_Text");

                entity.Property(e => e.FromDate).HasColumnType("datetime");

                entity.Property(e => e.FrozenComm).HasMaxLength(30);

                entity.Property(e => e.FrozenFor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("frozenFor")
                    .IsFixedLength(true);

                entity.Property(e => e.FrozenFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("frozenFrom");

                entity.Property(e => e.FrozenTo)
                    .HasColumnType("datetime")
                    .HasColumnName("frozenTo");

                entity.Property(e => e.GlblLocNum).HasMaxLength(50);

                entity.Property(e => e.GtsbankAct)
                    .HasMaxLength(80)
                    .HasColumnName("GTSBankAct");

                entity.Property(e => e.GtsbilAddr)
                    .HasMaxLength(80)
                    .HasColumnName("GTSBilAddr");

                entity.Property(e => e.GtsregNum)
                    .HasMaxLength(20)
                    .HasColumnName("GTSRegNum");

                entity.Property(e => e.HierchDdct)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.HldCode).HasMaxLength(20);

                entity.Property(e => e.HousBnkAct).HasMaxLength(50);

                entity.Property(e => e.HousBnkBrn).HasMaxLength(50);

                entity.Property(e => e.HousBnkCry).HasMaxLength(3);

                entity.Property(e => e.HousCtlKey).HasMaxLength(2);

                entity.Property(e => e.HouseBank).HasMaxLength(30);

                entity.Property(e => e.HsBnkIban)
                    .HasMaxLength(50)
                    .HasColumnName("HsBnkIBAN");

                entity.Property(e => e.HsBnkSwift).HasMaxLength(50);

                entity.Property(e => e.Iban)
                    .HasMaxLength(50)
                    .HasColumnName("IBAN");

                entity.Property(e => e.Indicator).HasMaxLength(2);

                entity.Property(e => e.Industry).HasColumnType("ntext");

                entity.Property(e => e.InstrucKey).HasMaxLength(30);

                entity.Property(e => e.InsurOp347)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IntrAcc).HasMaxLength(15);

                entity.Property(e => e.IntrntSite).HasMaxLength(100);

                entity.Property(e => e.IntrstRate).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.IsDomestic)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsResident)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsrbillId)
                    .HasMaxLength(9)
                    .HasColumnName("ISRBillId");

                entity.Property(e => e.Itwtcode)
                    .HasMaxLength(4)
                    .HasColumnName("ITWTCode");

                entity.Property(e => e.Kbkcode)
                    .HasMaxLength(20)
                    .HasColumnName("KBKCode");

                entity.Property(e => e.LetterNum).HasMaxLength(20);

                entity.Property(e => e.LicTradNum).HasMaxLength(32);

                entity.Property(e => e.LocMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.MailAddrTy).HasMaxLength(100);

                entity.Property(e => e.MailAddres).HasMaxLength(100);

                entity.Property(e => e.MailBlock).HasMaxLength(100);

                entity.Property(e => e.MailBuildi).HasColumnType("ntext");

                entity.Property(e => e.MailCity).HasMaxLength(100);

                entity.Property(e => e.MailCountr).HasMaxLength(3);

                entity.Property(e => e.MailCounty).HasMaxLength(100);

                entity.Property(e => e.MailStrNo).HasMaxLength(100);

                entity.Property(e => e.MailZipCod).HasMaxLength(20);

                entity.Property(e => e.MandateId)
                    .HasMaxLength(35)
                    .HasColumnName("MandateID");

                entity.Property(e => e.MaxAmount).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.MinIntrst).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.MivzExpSts)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Mthcounter).HasColumnName("MTHCounter");

                entity.Property(e => e.Ninum)
                    .HasMaxLength(20)
                    .HasColumnName("NINum");

                entity.Property(e => e.NoDiscount)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Notes).HasMaxLength(100);

                entity.Property(e => e.NtswebSite).HasColumnName("NTSWebSite");

                entity.Property(e => e.ObjType).HasMaxLength(20);

                entity.Property(e => e.Okato)
                    .HasMaxLength(11)
                    .HasColumnName("OKATO");

                entity.Property(e => e.Oktmo)
                    .HasMaxLength(12)
                    .HasColumnName("OKTMO");

                entity.Property(e => e.OpCode347)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.OrderBalFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("OrderBalFC");

                entity.Property(e => e.OrderBalSy).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OrdersBal).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OtrCtlAcct).HasMaxLength(15);

                entity.Property(e => e.OwnerIdNum).HasMaxLength(15);

                entity.Property(e => e.Pager).HasMaxLength(30);

                entity.Property(e => e.PartDelivr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Password).HasMaxLength(32);

                entity.Property(e => e.PaymBlock)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Phone1).HasMaxLength(20);

                entity.Property(e => e.Phone2).HasMaxLength(20);

                entity.Property(e => e.Picture).HasMaxLength(200);

                entity.Property(e => e.PlngGroup).HasMaxLength(10);

                entity.Property(e => e.PrevYearAc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Profession).HasMaxLength(50);

                entity.Property(e => e.ProjectCod).HasMaxLength(20);

                entity.Property(e => e.Protected)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PymCode).HasMaxLength(15);

                entity.Property(e => e.QryGroup1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup10)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup11)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup12)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup13)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup14)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup15)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup16)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup17)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup18)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup19)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup20)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup21)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup22)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup23)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup24)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup25)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup26)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup27)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup28)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup29)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup30)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup31)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup32)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup33)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup34)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup35)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup36)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup37)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup38)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup39)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup40)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup41)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup42)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup43)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup44)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup45)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup46)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup47)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup48)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup49)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup5)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup50)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup51)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup52)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup53)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup54)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup55)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup56)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup57)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup58)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup59)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup6)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup60)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup61)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup62)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup63)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup64)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup7)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup8)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup9)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.RateDifAct).HasMaxLength(15);

                entity.Property(e => e.RcpntId)
                    .HasMaxLength(50)
                    .HasColumnName("RcpntID");

                entity.Property(e => e.RefDetails).HasMaxLength(20);

                entity.Property(e => e.RegNum).HasMaxLength(32);

                entity.Property(e => e.RelCode).HasMaxLength(2);

                entity.Property(e => e.RepName).HasMaxLength(15);

                entity.Property(e => e.ResidenNum)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.RoleTypCod).HasMaxLength(2);

                entity.Property(e => e.SEmployed)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sEmployed")
                    .IsFixedLength(true);

                entity.Property(e => e.Scadjust)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SCAdjust")
                    .IsFixedLength(true);

                entity.Property(e => e.Scncounter).HasColumnName("SCNCounter");

                entity.Property(e => e.SefazCheck)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.SefazDate).HasColumnType("datetime");

                entity.Property(e => e.SefazReply).HasMaxLength(254);

                entity.Property(e => e.SelfInvoic)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.SenderId)
                    .HasMaxLength(50)
                    .HasColumnName("SenderID");

                entity.Property(e => e.ShipToDef).HasMaxLength(50);

                entity.Property(e => e.SignDate).HasColumnType("datetime");

                entity.Property(e => e.SinglePaym)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Spgcounter).HasColumnName("SPGCounter");

                entity.Property(e => e.Sppcounter).HasColumnName("SPPCounter");

                entity.Property(e => e.State1).HasMaxLength(3);

                entity.Property(e => e.State2).HasMaxLength(3);

                entity.Property(e => e.StreetNo).HasMaxLength(100);

                entity.Property(e => e.SurOver)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.TaxIdIdent)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.TaxRndRule)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ThreshOver)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ToDate).HasColumnType("datetime");

                entity.Property(e => e.Transfered)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.TypWtreprt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TypWTReprt")
                    .IsFixedLength(true);

                entity.Property(e => e.TypeOfOp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.UArvoot)
                    .HasMaxLength(2)
                    .HasColumnName("U_Arvoot");

                entity.Property(e => e.UBsyCc3dg).HasColumnName("U_bsyCC3Dg");

                entity.Property(e => e.UBsyClMem)
                    .HasMaxLength(50)
                    .HasColumnName("U_bsyClMem");

                entity.Property(e => e.UBsyCstatus)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyCStatus");

                entity.Property(e => e.UBsyFname)
                    .HasMaxLength(50)
                    .HasColumnName("U_bsyFName");

                entity.Property(e => e.UBsyIcid).HasColumnName("U_bsyICID");

                entity.Property(e => e.UBsyInVis)
                    .HasMaxLength(2)
                    .HasColumnName("U_bsyInVis");

                entity.Property(e => e.UBsyLname)
                    .HasMaxLength(50)
                    .HasColumnName("U_bsyLName");

                entity.Property(e => e.UBsyMpoints).HasColumnName("U_bsyMPoints");

                entity.Property(e => e.UBsyPrMsg)
                    .HasMaxLength(254)
                    .HasColumnName("U_bsyPrMsg");

                entity.Property(e => e.UBsyPsw)
                    .HasMaxLength(15)
                    .HasColumnName("U_bsyPsw");

                entity.Property(e => e.UBsyPsw2)
                    .HasMaxLength(15)
                    .HasColumnName("U_bsyPsw2");

                entity.Property(e => e.UBsyReceiveMsg)
                    .HasMaxLength(2)
                    .HasColumnName("U_bsyReceiveMsg");

                entity.Property(e => e.UBsyReceiveSms)
                    .HasMaxLength(2)
                    .HasColumnName("U_bsyReceiveSMS");

                entity.Property(e => e.UBsyTel3)
                    .HasMaxLength(30)
                    .HasColumnName("U_bsyTEL3");

                entity.Property(e => e.UBsyTmcmsn).HasColumnName("U_bsyTMCmsn");

                entity.Property(e => e.UBsyType)
                    .HasMaxLength(2)
                    .HasColumnName("U_bsyType");

                entity.Property(e => e.UBsyType2)
                    .HasMaxLength(2)
                    .HasColumnName("U_bsyType2");

                entity.Property(e => e.UBsyUname)
                    .HasMaxLength(15)
                    .HasColumnName("U_bsyUName");

                entity.Property(e => e.UBsyUname2)
                    .HasMaxLength(15)
                    .HasColumnName("U_bsyUName2");

                entity.Property(e => e.UHesMasEmail)
                    .HasMaxLength(100)
                    .HasColumnName("U_HesMasEmail");

                entity.Property(e => e.UHesOnlyEmail)
                    .HasMaxLength(2)
                    .HasColumnName("U_HesOnlyEmail");

                entity.Property(e => e.ULongname)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasColumnName("U_longname");

                entity.Property(e => e.UStatus)
                    .HasMaxLength(30)
                    .HasColumnName("U_status");

                entity.Property(e => e.UnpaidBoE).HasMaxLength(15);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");

                entity.Property(e => e.UseShpdGd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ValidComm).HasMaxLength(30);

                entity.Property(e => e.ValidFor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("validFor")
                    .IsFixedLength(true);

                entity.Property(e => e.ValidFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("validFrom");

                entity.Property(e => e.ValidTo)
                    .HasColumnType("datetime")
                    .HasColumnName("validTo");

                entity.Property(e => e.ValidUntil).HasColumnType("datetime");

                entity.Property(e => e.VatGroup).HasMaxLength(8);

                entity.Property(e => e.VatIdUnCmp).HasMaxLength(32);

                entity.Property(e => e.VatIdnum)
                    .HasMaxLength(32)
                    .HasColumnName("VatIDNum");

                entity.Property(e => e.VatStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.VatregNum)
                    .HasMaxLength(32)
                    .HasColumnName("VATRegNum");

                entity.Property(e => e.VendTid).HasColumnName("VendTID");

                entity.Property(e => e.VendorOcup).HasMaxLength(15);

                entity.Property(e => e.VerifNum).HasMaxLength(32);

                entity.Property(e => e.WhshaamGrp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("WHShaamGrp")
                    .IsFixedLength(true);

                entity.Property(e => e.Wtcode)
                    .HasMaxLength(4)
                    .HasColumnName("WTCode");

                entity.Property(e => e.Wtliable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("WTLiable")
                    .IsFixedLength(true);

                entity.Property(e => e.WttaxCat)
                    .HasColumnType("ntext")
                    .HasColumnName("WTTaxCat");

                entity.Property(e => e.ZipCode).HasMaxLength(20);
            });

            modelBuilder.Entity<Oitm>(entity =>
            {
                entity.HasKey(e => e.ItemCode)
                    .HasName("OITM_PRIMARY");

                entity.ToTable("OITM", "dbo");

                entity.HasIndex(e => e.CommisGrp, "OITM_COM_GROUP");

                entity.HasIndex(e => e.InvntItem, "OITM_INVENTORY");

                entity.HasIndex(e => e.ItemName, "OITM_ITEM_NAME");

                entity.HasIndex(e => e.PrchseItem, "OITM_PURCHASE");

                entity.HasIndex(e => e.SellItem, "OITM_SALE");

                entity.HasIndex(e => e.TreeType, "OITM_TREE_TYPE");

                entity.Property(e => e.ItemCode).HasMaxLength(20);

                entity.Property(e => e.AcqDate).HasColumnType("datetime");

                entity.Property(e => e.AssblValue).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.AssetAmnt1).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.AssetAmnt2).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.AssetClass).HasMaxLength(20);

                entity.Property(e => e.AssetGroup).HasMaxLength(15);

                entity.Property(e => e.AssetItem)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.AssetRmk1).HasMaxLength(100);

                entity.Property(e => e.AssetRmk2).HasMaxLength(100);

                entity.Property(e => e.AssetSerNo).HasMaxLength(30);

                entity.Property(e => e.AsstStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Attachment).HasColumnType("ntext");

                entity.Property(e => e.AvgPrice).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BaseUnit).HasMaxLength(20);

                entity.Property(e => e.BeverGrpC).HasMaxLength(2);

                entity.Property(e => e.BeverTblC).HasMaxLength(2);

                entity.Property(e => e.BeverTm).HasColumnName("BeverTM");

                entity.Property(e => e.Bheight1)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BHeight1");

                entity.Property(e => e.Bheight2)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BHeight2");

                entity.Property(e => e.Bhght1Unit).HasColumnName("BHght1Unit");

                entity.Property(e => e.Bhght2Unit).HasColumnName("BHght2Unit");

                entity.Property(e => e.Blen1Unit).HasColumnName("BLen1Unit");

                entity.Property(e => e.Blen2Unit).HasColumnName("BLen2Unit");

                entity.Property(e => e.Blength1)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BLength1");

                entity.Property(e => e.Blength2).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BlncTrnsfr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.BlockOut)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.BuyUnitMsr).HasMaxLength(100);

                entity.Property(e => e.BvolUnit).HasColumnName("BVolUnit");

                entity.Property(e => e.Bvolume)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BVolume");

                entity.Property(e => e.Bwdth1Unit).HasColumnName("BWdth1Unit");

                entity.Property(e => e.Bwdth2Unit).HasColumnName("BWdth2Unit");

                entity.Property(e => e.Bweight1)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BWeight1");

                entity.Property(e => e.Bweight2)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BWeight2");

                entity.Property(e => e.Bwght1Unit).HasColumnName("BWght1Unit");

                entity.Property(e => e.Bwght2Unit).HasColumnName("BWght2Unit");

                entity.Property(e => e.Bwidth1)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BWidth1");

                entity.Property(e => e.Bwidth2)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BWidth2");

                entity.Property(e => e.ByWh)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Canceled)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.CapDate).HasColumnType("datetime");

                entity.Property(e => e.CardCode).HasMaxLength(15);

                entity.Property(e => e.Cession)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ChapterId).HasColumnName("ChapterID");

                entity.Property(e => e.CntUnitMsr).HasMaxLength(100);

                entity.Property(e => e.CodeBars).HasMaxLength(254);

                entity.Property(e => e.CommisPcnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.CommisSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.CompoWh)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CompoWH")
                    .IsFixedLength(true);

                entity.Property(e => e.Consig).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Counted).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.CountryOrg).HasMaxLength(3);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.CustomPer).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DataSource)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DeacAftUl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DeacAftUL")
                    .IsFixedLength(true);

                entity.Property(e => e.Deleted)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DeprGroup).HasMaxLength(15);

                entity.Property(e => e.DfltWh)
                    .HasMaxLength(8)
                    .HasColumnName("DfltWH");

                entity.Property(e => e.Dnfentry).HasColumnName("DNFEntry");

                entity.Property(e => e.EcexpAcc)
                    .HasMaxLength(15)
                    .HasColumnName("ECExpAcc");

                entity.Property(e => e.EcinAcct)
                    .HasMaxLength(15)
                    .HasColumnName("ECInAcct");

                entity.Property(e => e.EvalSystem)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Excisable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ExitCur).HasMaxLength(3);

                entity.Property(e => e.ExitPrice).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ExitWh)
                    .HasMaxLength(8)
                    .HasColumnName("ExitWH");

                entity.Property(e => e.ExmptIncom).HasMaxLength(15);

                entity.Property(e => e.ExpensAcct).HasMaxLength(15);

                entity.Property(e => e.ExportCode).HasMaxLength(20);

                entity.Property(e => e.FixCurrCms).HasMaxLength(3);

                entity.Property(e => e.Free)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE")
                    .IsFixedLength(true);

                entity.Property(e => e.Free1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE1")
                    .IsFixedLength(true);

                entity.Property(e => e.FrgnExpAcc).HasMaxLength(15);

                entity.Property(e => e.FrgnInAcct).HasMaxLength(15);

                entity.Property(e => e.FrgnName).HasMaxLength(100);

                entity.Property(e => e.FrozenComm).HasMaxLength(30);

                entity.Property(e => e.FrozenFor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("frozenFor")
                    .IsFixedLength(true);

                entity.Property(e => e.FrozenFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("frozenFrom");

                entity.Property(e => e.FrozenTo)
                    .HasColumnType("datetime")
                    .HasColumnName("frozenTo");

                entity.Property(e => e.Glmethod)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GLMethod")
                    .IsFixedLength(true);

                entity.Property(e => e.GlpickMeth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GLPickMeth")
                    .IsFixedLength(true);

                entity.Property(e => e.IncomeAcct).HasMaxLength(15);

                entity.Property(e => e.IndirctTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.InuoMentry).HasColumnName("INUoMEntry");

                entity.Property(e => e.InventryNo).HasMaxLength(12);

                entity.Property(e => e.InvntItem)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.InvntryUom).HasMaxLength(100);

                entity.Property(e => e.IsCommited).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.IssueMthd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsvcCode).HasColumnName("ISvcCode");

                entity.Property(e => e.ItemClass)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ItemName).HasMaxLength(100);

                entity.Property(e => e.ItemType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IuoMentry).HasColumnName("IUoMEntry");

                entity.Property(e => e.Iweight1)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("IWeight1");

                entity.Property(e => e.Iweight2)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("IWeight2");

                entity.Property(e => e.Iwght1Unit).HasColumnName("IWght1Unit");

                entity.Property(e => e.Iwght2Unit).HasColumnName("IWght2Unit");

                entity.Property(e => e.LastPurCur).HasMaxLength(3);

                entity.Property(e => e.LastPurDat).HasColumnType("datetime");

                entity.Property(e => e.LastPurPrc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.LstEvlDate).HasColumnType("datetime");

                entity.Property(e => e.LstEvlPric).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.LstSalDate).HasColumnType("datetime");

                entity.Property(e => e.ManBtchNum)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ManOutOnly)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ManSerNum)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.MatType).HasMaxLength(3);

                entity.Property(e => e.MaxLevel).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.MgrByQty)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.MinLevel).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.MinOrdrQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.MngMethod)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Ncmcode).HasColumnName("NCMCode");

                entity.Property(e => e.NoDiscount)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.NotifyAsn)
                    .HasMaxLength(40)
                    .HasColumnName("NotifyASN");

                entity.Property(e => e.NumInBuy).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.NumInCnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.NumInSale).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ObjType).HasMaxLength(20);

                entity.Property(e => e.OnHand).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OnOrder).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OneBoneRec)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OneBOneRec")
                    .IsFixedLength(true);

                entity.Property(e => e.OpenBlnc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OrdrMulti).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OsvcCode).HasColumnName("OSvcCode");

                entity.Property(e => e.Phantom)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PicturName).HasMaxLength(200);

                entity.Property(e => e.PlaningSys)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PrchseItem)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PrcrmntMtd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PricingPrc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ProAssNum).HasMaxLength(20);

                entity.Property(e => e.ProductSrc).HasMaxLength(2);

                entity.Property(e => e.PuoMentry).HasColumnName("PUoMEntry");

                entity.Property(e => e.PurFactor1).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PurFactor2).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PurFactor3).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PurFactor4).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PurFormula).HasMaxLength(40);

                entity.Property(e => e.PurPackMsr).HasMaxLength(30);

                entity.Property(e => e.PurPackUn).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.QryGroup1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup10)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup11)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup12)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup13)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup14)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup15)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup16)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup17)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup18)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup19)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup20)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup21)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup22)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup23)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup24)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup25)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup26)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup27)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup28)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup29)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup30)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup31)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup32)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup33)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup34)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup35)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup36)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup37)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup38)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup39)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup40)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup41)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup42)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup43)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup44)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup45)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup46)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup47)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup48)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup49)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup5)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup50)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup51)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup52)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup53)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup54)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup55)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup56)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup57)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup58)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup59)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup6)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup60)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup61)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup62)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup63)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup64)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup7)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup8)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.QryGroup9)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ReorderPnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ReorderQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.RetDate).HasColumnType("datetime");

                entity.Property(e => e.RetilrTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.RuleCode).HasMaxLength(2);

                entity.Property(e => e.SalFactor1).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.SalFactor2).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.SalFactor3).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.SalFactor4).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.SalFormula).HasMaxLength(40);

                entity.Property(e => e.SalPackMsr).HasMaxLength(30);

                entity.Property(e => e.SalPackUn).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.SalUnitMsr).HasMaxLength(100);

                entity.Property(e => e.Scncounter).HasColumnName("SCNCounter");

                entity.Property(e => e.ScsCode).HasMaxLength(10);

                entity.Property(e => e.SellItem)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.SerialNum).HasMaxLength(17);

                entity.Property(e => e.Sheight1)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("SHeight1");

                entity.Property(e => e.Sheight2)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("SHeight2");

                entity.Property(e => e.Shght1Unit).HasColumnName("SHght1Unit");

                entity.Property(e => e.Shght2Unit).HasColumnName("SHght2Unit");

                entity.Property(e => e.Slen1Unit).HasColumnName("SLen1Unit");

                entity.Property(e => e.Slen2Unit).HasColumnName("SLen2Unit");

                entity.Property(e => e.Slength1)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("SLength1");

                entity.Property(e => e.Slength2).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.SpProdType).HasMaxLength(2);

                entity.Property(e => e.SpcialDisc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Spec).HasMaxLength(30);

                entity.Property(e => e.StatAsset)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.StockValue).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.SuoMentry).HasColumnName("SUoMEntry");

                entity.Property(e => e.SuppCatNum).HasMaxLength(17);

                entity.Property(e => e.SvolUnit).HasColumnName("SVolUnit");

                entity.Property(e => e.Svolume)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("SVolume");

                entity.Property(e => e.Swdth1Unit).HasColumnName("SWdth1Unit");

                entity.Property(e => e.Swdth2Unit).HasColumnName("SWdth2Unit");

                entity.Property(e => e.Sweight1)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("SWeight1");

                entity.Property(e => e.Sweight2)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("SWeight2");

                entity.Property(e => e.Swght1Unit).HasColumnName("SWght1Unit");

                entity.Property(e => e.Swght2Unit).HasColumnName("SWght2Unit");

                entity.Property(e => e.Swidth1)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("SWidth1");

                entity.Property(e => e.Swidth2)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("SWidth2");

                entity.Property(e => e.Sww)
                    .HasMaxLength(16)
                    .HasColumnName("SWW");

                entity.Property(e => e.TaxCodeAp)
                    .HasMaxLength(8)
                    .HasColumnName("TaxCodeAP");

                entity.Property(e => e.TaxCodeAr)
                    .HasMaxLength(8)
                    .HasColumnName("TaxCodeAR");

                entity.Property(e => e.TaxCtg).HasMaxLength(4);

                entity.Property(e => e.TaxType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.TrackSales)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Transfered)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.TreeQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TreeType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.UAltPath)
                    .HasMaxLength(254)
                    .HasColumnName("U_AltPath");

                entity.Property(e => e.UBsyAlt1)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt1");

                entity.Property(e => e.UBsyAlt10)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt10");

                entity.Property(e => e.UBsyAlt11)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt11");

                entity.Property(e => e.UBsyAlt12)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt12");

                entity.Property(e => e.UBsyAlt2)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt2");

                entity.Property(e => e.UBsyAlt3)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt3");

                entity.Property(e => e.UBsyAlt4)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt4");

                entity.Property(e => e.UBsyAlt5)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt5");

                entity.Property(e => e.UBsyAlt6)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt6");

                entity.Property(e => e.UBsyAlt7)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt7");

                entity.Property(e => e.UBsyAlt8)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt8");

                entity.Property(e => e.UBsyAlt9)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAlt9");

                entity.Property(e => e.UBsyAltProducts)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyAltProducts");

                entity.Property(e => e.UBsyFirmLink)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyFirmLink");

                entity.Property(e => e.UBsyImage1)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage1");

                entity.Property(e => e.UBsyImage10)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage10");

                entity.Property(e => e.UBsyImage11)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage11");

                entity.Property(e => e.UBsyImage12)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage12");

                entity.Property(e => e.UBsyImage2)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage2");

                entity.Property(e => e.UBsyImage3)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage3");

                entity.Property(e => e.UBsyImage4)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage4");

                entity.Property(e => e.UBsyImage5)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage5");

                entity.Property(e => e.UBsyImage6)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage6");

                entity.Property(e => e.UBsyImage7)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage7");

                entity.Property(e => e.UBsyImage8)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage8");

                entity.Property(e => e.UBsyImage9)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyImage9");

                entity.Property(e => e.UBsyInVis)
                    .HasMaxLength(2)
                    .HasColumnName("U_bsyInVis");

                entity.Property(e => e.UBsyLnkProducts)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyLnkProducts");

                entity.Property(e => e.UBsyMpoints).HasColumnName("U_bsyMPoints");

                entity.Property(e => e.UBsyPage)
                    .HasMaxLength(50)
                    .HasColumnName("U_bsyPAGE");

                entity.Property(e => e.UBsyProp1)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyPROP1");

                entity.Property(e => e.UBsyProp2)
                    .HasMaxLength(250)
                    .HasColumnName("U_bsyPROP2");

                entity.Property(e => e.UBsyShipId)
                    .HasMaxLength(2)
                    .HasColumnName("U_bsyShipID");

                entity.Property(e => e.UBsyShipp)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_bsySHIPP");

                entity.Property(e => e.UBsySrch)
                    .HasMaxLength(2)
                    .HasColumnName("U_bsySrch");

                entity.Property(e => e.UCelsTray)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_CelsTray");

                entity.Property(e => e.UHebGidul)
                    .HasColumnType("ntext")
                    .HasColumnName("U_HebGidul");

                entity.Property(e => e.UHebZan)
                    .HasMaxLength(30)
                    .HasColumnName("U_HebZan");

                entity.Property(e => e.UProp)
                    .HasMaxLength(30)
                    .HasColumnName("U_Prop");

                entity.Property(e => e.USeedTillDate)
                    .HasColumnType("datetime")
                    .HasColumnName("U_SeedTillDate");

                entity.Property(e => e.UUpdater)
                    .HasMaxLength(20)
                    .HasColumnName("U_updater");

                entity.Property(e => e.UZraCoef)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_ZraCoef");

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");

                entity.Property(e => e.UserText).HasColumnType("ntext");

                entity.Property(e => e.ValidComm).HasMaxLength(30);

                entity.Property(e => e.ValidFor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("validFor")
                    .IsFixedLength(true);

                entity.Property(e => e.ValidFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("validFrom");

                entity.Property(e => e.ValidTo)
                    .HasColumnType("datetime")
                    .HasColumnName("validTo");

                entity.Property(e => e.VatGourpSa).HasMaxLength(8);

                entity.Property(e => e.VatGroupPu).HasMaxLength(8);

                entity.Property(e => e.Vatliable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VATLiable")
                    .IsFixedLength(true);

                entity.Property(e => e.WarrntTmpl).HasMaxLength(20);

                entity.Property(e => e.WasCounted)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.WholSlsTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Wtliable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("WTLiable")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Ordr>(entity =>
            {
                entity.HasKey(e => e.DocEntry)
                    .HasName("ORDR_PRIMARY");

                entity.ToTable("ORDR", "dbo");

                entity.HasIndex(e => new { e.NumAtCard, e.CardCode }, "ORDR_AT_CARD");

                entity.HasIndex(e => e.CardCode, "ORDR_CUSTOMER");

                entity.HasIndex(e => new { e.DocDate, e.Pindicator }, "ORDR_DATE_PIND");

                entity.HasIndex(e => new { e.DocStatus, e.Canceled }, "ORDR_DOC_STATUS");

                entity.HasIndex(e => new { e.Eseries, e.EdocNum }, "ORDR_ESERIES");

                entity.HasIndex(e => new { e.FatherCard, e.FatherType }, "ORDR_FTHR_CARD");

                entity.HasIndex(e => new { e.DocNum, e.Instance, e.Segment, e.DocSubType, e.Pindicator }, "ORDR_NUM")
                    .IsUnique();

                entity.HasIndex(e => e.OwnerCode, "ORDR_OWNER_CODE");

                entity.HasIndex(e => e.Series, "ORDR_SERIES");

                entity.Property(e => e.DocEntry).ValueGeneratedNever();

                entity.Property(e => e.Address).HasMaxLength(254);

                entity.Property(e => e.Address2).HasMaxLength(254);

                entity.Property(e => e.AgentCode).HasMaxLength(32);

                entity.Property(e => e.AqcsTax).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.AqcsTaxFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("AqcsTaxFC");

                entity.Property(e => e.AqcsTaxSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("AqcsTaxSC");

                entity.Property(e => e.AssetDate).HasColumnType("datetime");

                entity.Property(e => e.AtDocType).HasMaxLength(2);

                entity.Property(e => e.Attachment).HasColumnType("ntext");

                entity.Property(e => e.AuthCode).HasMaxLength(250);

                entity.Property(e => e.AutoCrtFlw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.BankCode).HasMaxLength(30);

                entity.Property(e => e.BaseAmnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BaseAmntFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BaseAmntFC");

                entity.Property(e => e.BaseAmntSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BaseAmntSC");

                entity.Property(e => e.BaseDisc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BaseDiscFc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BaseDiscPr).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BaseDiscSc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BaseVtAt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BaseVtAtFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BaseVtAtFC");

                entity.Property(e => e.BaseVtAtSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("BaseVtAtSC");

                entity.Property(e => e.BillToOw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BillToOW")
                    .IsFixedLength(true);

                entity.Property(e => e.BlkCredMmo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.BlockDunn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.BnkAccount).HasMaxLength(50);

                entity.Property(e => e.BnkBranch).HasMaxLength(50);

                entity.Property(e => e.BnkCntry).HasMaxLength(3);

                entity.Property(e => e.BoeReserev)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Box1099).HasMaxLength(20);

                entity.Property(e => e.BpchCntc).HasColumnName("BPChCntc");

                entity.Property(e => e.BpchCode)
                    .HasMaxLength(15)
                    .HasColumnName("BPChCode");

                entity.Property(e => e.Bplid).HasColumnName("BPLId");

                entity.Property(e => e.Bplname)
                    .HasMaxLength(100)
                    .HasColumnName("BPLName");

                entity.Property(e => e.BpnameOw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BPNameOW")
                    .IsFixedLength(true);

                entity.Property(e => e.BuildDesc).HasMaxLength(50);

                entity.Property(e => e.CancelDate).HasColumnType("datetime");

                entity.Property(e => e.Canceled)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCELED")
                    .IsFixedLength(true);

                entity.Property(e => e.CardCode).HasMaxLength(15);

                entity.Property(e => e.CardName).HasMaxLength(100);

                entity.Property(e => e.CashDiscFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("CashDiscFC");

                entity.Property(e => e.CashDiscPr).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.CashDiscSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("CashDiscSC");

                entity.Property(e => e.CashDiscnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Ccdentry).HasColumnName("CCDEntry");

                entity.Property(e => e.Ceecflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CEECFlag")
                    .IsFixedLength(true);

                entity.Property(e => e.CertNum).HasMaxLength(31);

                entity.Property(e => e.CertifNum).HasMaxLength(50);

                entity.Property(e => e.CheckDigit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Cig).HasColumnName("CIG");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.CntrlBnk).HasMaxLength(15);

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.Confirmed)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.CorrExt).HasMaxLength(25);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.CreateTran)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.CreateTs).HasColumnName("CreateTS");

                entity.Property(e => e.CtlAccount).HasMaxLength(15);

                entity.Property(e => e.Cup).HasColumnName("CUP");

                entity.Property(e => e.CurSource)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DataSource)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DeferrTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DiscPrcnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DiscSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DiscSumFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("DiscSumFC");

                entity.Property(e => e.DiscSumSy).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DocCur).HasMaxLength(3);

                entity.Property(e => e.DocDate).HasColumnType("datetime");

                entity.Property(e => e.DocDlvry)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DocDueDate).HasColumnType("datetime");

                entity.Property(e => e.DocManClsd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DocRate).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DocStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DocSubType)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.DocTotal).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DocTotalFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("DocTotalFC");

                entity.Property(e => e.DocTotalSy).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DocType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DpmAmnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DpmAmntFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("DpmAmntFC");

                entity.Property(e => e.DpmAmntSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("DpmAmntSC");

                entity.Property(e => e.DpmAppVat).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DpmAppVatF).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DpmAppVatS).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DpmAppl).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DpmApplFc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DpmApplSc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DpmAsDscnt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DpmDrawn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DpmPrcnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DpmStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DpmVat).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DpmVatFc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DpmVatSc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DraftKey).HasColumnName("draftKey");

                entity.Property(e => e.DutyStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.EdocCancel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EDocCancel")
                    .IsFixedLength(true);

                entity.Property(e => e.EdocCntnt)
                    .HasColumnType("ntext")
                    .HasColumnName("EDocCntnt");

                entity.Property(e => e.EdocErrCod)
                    .HasMaxLength(50)
                    .HasColumnName("EDocErrCod");

                entity.Property(e => e.EdocErrMsg)
                    .HasColumnType("ntext")
                    .HasColumnName("EDocErrMsg");

                entity.Property(e => e.EdocExpFrm).HasColumnName("EDocExpFrm");

                entity.Property(e => e.EdocGenTyp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EDocGenTyp")
                    .IsFixedLength(true);

                entity.Property(e => e.EdocNum)
                    .HasMaxLength(50)
                    .HasColumnName("EDocNum");

                entity.Property(e => e.EdocPrefix)
                    .HasMaxLength(10)
                    .HasColumnName("EDocPrefix");

                entity.Property(e => e.EdocProces)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EDocProces")
                    .IsFixedLength(true);

                entity.Property(e => e.EdocStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EDocStatus")
                    .IsFixedLength(true);

                entity.Property(e => e.EdocTest)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EDocTest")
                    .IsFixedLength(true);

                entity.Property(e => e.ElCoMsg).HasMaxLength(254);

                entity.Property(e => e.ElCoStatus).HasMaxLength(10);

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.EndDlvDate).HasColumnType("datetime");

                entity.Property(e => e.EnvTypeNfe).HasColumnName("EnvTypeNFe");

                entity.Property(e => e.EquVatSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.EquVatSumF).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.EquVatSumS).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Eseries).HasColumnName("ESeries");

                entity.Property(e => e.ExcDocDate).HasColumnType("datetime");

                entity.Property(e => e.ExcRefDate).HasColumnType("datetime");

                entity.Property(e => e.ExcRmvTime).HasMaxLength(8);

                entity.Property(e => e.Excised)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ExepAmnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ExepAmntFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("ExepAmntFC");

                entity.Property(e => e.ExepAmntSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("ExepAmntSC");

                entity.Property(e => e.ExpAnFrgn).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ExpAnSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ExpAnSys).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ExpAppl).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ExpApplFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("ExpApplFC");

                entity.Property(e => e.ExpApplSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("ExpApplSC");

                entity.Property(e => e.Exported)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ExptVat)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("ExptVAt");

                entity.Property(e => e.ExptVatFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("ExptVAtFC");

                entity.Property(e => e.ExptVatSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("ExptVAtSC");

                entity.Property(e => e.FatherCard).HasMaxLength(15);

                entity.Property(e => e.FatherType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Filler).HasMaxLength(8);

                entity.Property(e => e.FiscDocNum).HasMaxLength(100);

                entity.Property(e => e.FlwRefDate).HasColumnType("datetime");

                entity.Property(e => e.FlwRefNum).HasMaxLength(100);

                entity.Property(e => e.FoCfrght)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("FoCFrght");

                entity.Property(e => e.FoCfrghtFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("FoCFrghtFC");

                entity.Property(e => e.FoCfrghtSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("FoCFrghtSC");

                entity.Property(e => e.FoCtax)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("FoCTax");

                entity.Property(e => e.FoCtaxFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("FoCTaxFC");

                entity.Property(e => e.FoCtaxSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("FoCTaxSC");

                entity.Property(e => e.FolioPref).HasMaxLength(4);

                entity.Property(e => e.Footer).HasColumnType("ntext");

                entity.Property(e => e.FreeChrg).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.FreeChrgFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("FreeChrgFC");

                entity.Property(e => e.FreeChrgSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("FreeChrgSC");

                entity.Property(e => e.FromDate).HasColumnType("datetime");

                entity.Property(e => e.GrosProfFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("GrosProfFC");

                entity.Property(e => e.GrosProfSy).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.GrosProfit).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Gtsrlvnt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GTSRlvnt")
                    .IsFixedLength(true);

                entity.Property(e => e.Handwrtten)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Header).HasColumnType("ntext");

                entity.Property(e => e.IgnRelDoc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Indicator).HasMaxLength(2);

                entity.Property(e => e.InsurOp347)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.InvntDirec)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.InvntSttus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsAlt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsCrin)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("isCrin")
                    .IsFixedLength(true);

                entity.Property(e => e.IsIct)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IsICT")
                    .IsFixedLength(true);

                entity.Property(e => e.IsIns)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("isIns")
                    .IsFixedLength(true);

                entity.Property(e => e.IsPaytoBnk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsReuseNfn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IsReuseNFN")
                    .IsFixedLength(true);

                entity.Property(e => e.IsReuseNum)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsrcodLine)
                    .HasMaxLength(53)
                    .HasColumnName("ISRCodLine");

                entity.Property(e => e.JrnlMemo).HasMaxLength(50);

                entity.Property(e => e.Kvvatcode)
                    .HasColumnType("ntext")
                    .HasColumnName("KVVATCode");

                entity.Property(e => e.LastPmnTyp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.LetterNum).HasMaxLength(20);

                entity.Property(e => e.LicTradNum).HasMaxLength(32);

                entity.Property(e => e.LpgFolioN).HasColumnName("LPgFolioN");

                entity.Property(e => e.LypmtAt)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("LYPmtAt");

                entity.Property(e => e.LypmtAtFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("LYPmtAtFC");

                entity.Property(e => e.LypmtAtSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("LYPmtAtSC");

                entity.Property(e => e.ManualNum).HasMaxLength(20);

                entity.Property(e => e.Max1099).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.MaxDscn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.MinvDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MInvDate");

                entity.Property(e => e.MinvNum).HasColumnName("MInvNum");

                entity.Property(e => e.Model).HasMaxLength(6);

                entity.Property(e => e.NbSbAmntFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("NbSbAmntFC");

                entity.Property(e => e.NbSbVatFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("NbSbVAtFC");

                entity.Property(e => e.NcorrInv).HasColumnName("NCorrInv");

                entity.Property(e => e.NetProc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.NfeValue).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.NnSbAmnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.NnSbAmntSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("NnSbAmntSC");

                entity.Property(e => e.NnSbVat)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("NnSbVAt");

                entity.Property(e => e.NnSbVatSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("NnSbVAtSC");

                entity.Property(e => e.Notify)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.NtsapprNo)
                    .HasMaxLength(50)
                    .HasColumnName("NTSApprNo");

                entity.Property(e => e.Ntsapprov)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NTSApprov")
                    .IsFixedLength(true);

                entity.Property(e => e.NtseTaxNo)
                    .HasMaxLength(50)
                    .HasColumnName("NTSeTaxNo");

                entity.Property(e => e.NtswebSite).HasColumnName("NTSWebSite");

                entity.Property(e => e.NumAtCard).HasMaxLength(100);

                entity.Property(e => e.ObjType).HasMaxLength(20);

                entity.Property(e => e.OnlineQuo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.OpenForLaC)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Ordered)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.OriginType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PaidDpm).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PaidDpmF).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PaidDpmS).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PaidFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("PaidFC");

                entity.Property(e => e.PaidSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PaidSumFc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PaidSumSc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PaidSys).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PaidToDate).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PartSupply)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PayBlock)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PayDuMonth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PayToCode).HasMaxLength(50);

                entity.Property(e => e.PaymentRef).HasMaxLength(27);

                entity.Property(e => e.PeyMethod).HasMaxLength(15);

                entity.Property(e => e.Pick)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PickRmrk).HasMaxLength(254);

                entity.Property(e => e.PickStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Pindicator)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("PIndicator");

                entity.Property(e => e.PoPrss)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PoscashN).HasColumnName("POSCashN");

                entity.Property(e => e.PoseqNum)
                    .HasMaxLength(20)
                    .HasColumnName("POSEqNum");

                entity.Property(e => e.PosmanufSn)
                    .HasMaxLength(20)
                    .HasColumnName("POSManufSN");

                entity.Property(e => e.PosrcptNo).HasColumnName("POSRcptNo");

                entity.Property(e => e.Posted)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PqtgrpHw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PQTGrpHW")
                    .IsFixedLength(true);

                entity.Property(e => e.PqtgrpNum).HasColumnName("PQTGrpNum");

                entity.Property(e => e.PqtgrpSer).HasColumnName("PQTGrpSer");

                entity.Property(e => e.PrintSepa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PrintSEPA")
                    .IsFixedLength(true);

                entity.Property(e => e.Printed)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Project).HasMaxLength(20);

                entity.Property(e => e.Ref1).HasMaxLength(11);

                entity.Property(e => e.Ref2).HasMaxLength(11);

                entity.Property(e => e.ReopManCls)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ReopOriDoc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ReqDate).HasColumnType("datetime");

                entity.Property(e => e.ReqName).HasMaxLength(155);

                entity.Property(e => e.Requester).HasMaxLength(8);

                entity.Property(e => e.Reserve)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ResidenNum)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.RetInvoice)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.RevisionPo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.RoundDif).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.RoundDifFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("RoundDifFC");

                entity.Property(e => e.RoundDifSy).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Rounding)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.SelfInv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("selfInv")
                    .IsFixedLength(true);

                entity.Property(e => e.SeriesStr).HasMaxLength(3);

                entity.Property(e => e.ShipToCode).HasMaxLength(50);

                entity.Property(e => e.ShipToOw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ShipToOW")
                    .IsFixedLength(true);

                entity.Property(e => e.ShowScn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ShowSCN")
                    .IsFixedLength(true);

                entity.Property(e => e.SignDigest).HasColumnType("ntext");

                entity.Property(e => e.SignMsg).HasColumnType("ntext");

                entity.Property(e => e.SpecDate).HasColumnType("datetime");

                entity.Property(e => e.SrvGpPrcnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.SrvTaxRule)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Ssiexmpt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SSIExmpt")
                    .IsFixedLength(true);

                entity.Property(e => e.StDlvDate).HasColumnType("datetime");

                entity.Property(e => e.StampNum).HasMaxLength(16);

                entity.Property(e => e.StationId).HasColumnName("StationID");

                entity.Property(e => e.SubStr).HasMaxLength(3);

                entity.Property(e => e.Submitted)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("submitted")
                    .IsFixedLength(true);

                entity.Property(e => e.SumRptDate).HasColumnType("datetime");

                entity.Property(e => e.SummryType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.SupplCode).HasMaxLength(254);

                entity.Property(e => e.Supplier).HasMaxLength(15);

                entity.Property(e => e.SysRate).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TaxDate).HasColumnType("datetime");

                entity.Property(e => e.TaxOnExAp).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TaxOnExApF).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TaxOnExApS).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TaxOnExp).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TaxOnExpFc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TaxOnExpSc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ToDate).HasColumnType("datetime");

                entity.Property(e => e.ToWhsCode).HasMaxLength(8);

                entity.Property(e => e.TotalExpFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("TotalExpFC");

                entity.Property(e => e.TotalExpSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("TotalExpSC");

                entity.Property(e => e.TotalExpns).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TrackNo).HasMaxLength(30);

                entity.Property(e => e.Transfered)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.TxInvRptDt).HasColumnType("datetime");

                entity.Property(e => e.TxInvRptNo).HasMaxLength(10);

                entity.Property(e => e.UAlarm)
                    .HasMaxLength(10)
                    .HasColumnName("U_Alarm");

                entity.Property(e => e.UAltPath)
                    .HasMaxLength(254)
                    .HasColumnName("U_AltPath");

                entity.Property(e => e.UArvoot)
                    .HasMaxLength(30)
                    .HasColumnName("U_Arvoot");

                entity.Property(e => e.UBalance)
                    .HasMaxLength(25)
                    .HasColumnName("U_balance");

                entity.Property(e => e.UBatchNum)
                    .HasMaxLength(20)
                    .HasColumnName("U_BatchNum");

                entity.Property(e => e.UBsyCardRemarks)
                    .HasMaxLength(100)
                    .HasColumnName("U_bsyCardRemarks");

                entity.Property(e => e.UBsyCrdtNum)
                    .HasMaxLength(20)
                    .HasColumnName("U_bsyCrdtNum");

                entity.Property(e => e.UBsyCtype)
                    .HasMaxLength(20)
                    .HasColumnName("U_bsyCType");

                entity.Property(e => e.UBsyCurr)
                    .HasMaxLength(2)
                    .HasColumnName("U_bsyCurr");

                entity.Property(e => e.UBsyCurr1)
                    .HasMaxLength(3)
                    .HasColumnName("U_bsyCurr1");

                entity.Property(e => e.UBsyExpDate)
                    .HasMaxLength(5)
                    .HasColumnName("U_bsyExpDate");

                entity.Property(e => e.UBsyExtDgt)
                    .HasMaxLength(5)
                    .HasColumnName("U_bsyExtDgt");

                entity.Property(e => e.UBsyIoid).HasColumnName("U_bsyIOID");

                entity.Property(e => e.UBsyIost)
                    .HasMaxLength(2)
                    .HasColumnName("U_bsyIOSt");

                entity.Property(e => e.UBsyMpoints).HasColumnName("U_bsyMPoints");

                entity.Property(e => e.UBsyNp).HasColumnName("U_bsyNP");

                entity.Property(e => e.UBsyOwnId)
                    .HasMaxLength(15)
                    .HasColumnName("U_bsyOwnID");

                entity.Property(e => e.UBsyTmcode)
                    .HasMaxLength(15)
                    .HasColumnName("U_bsyTMCode");

                entity.Property(e => e.UBsyTmname)
                    .HasMaxLength(100)
                    .HasColumnName("U_bsyTMName");

                entity.Property(e => e.UBsyVoucher)
                    .HasMaxLength(20)
                    .HasColumnName("U_bsyVoucher");

                entity.Property(e => e.UCbalance)
                    .HasMaxLength(20)
                    .HasColumnName("U_Cbalance");

                entity.Property(e => e.UContremark)
                    .HasColumnType("ntext")
                    .HasColumnName("U_Contremark");

                entity.Property(e => e.UDriver)
                    .HasMaxLength(12)
                    .HasColumnName("U_driver");

                entity.Property(e => e.UEmail)
                    .HasMaxLength(30)
                    .HasColumnName("U_Email");

                entity.Property(e => e.UFax)
                    .HasMaxLength(20)
                    .HasColumnName("U_fax");

                entity.Property(e => e.UHokNote)
                    .HasMaxLength(254)
                    .HasColumnName("U_HokNote");

                entity.Property(e => e.UProcStat)
                    .HasMaxLength(50)
                    .HasColumnName("U_ProcStat");

                entity.Property(e => e.USentStat)
                    .HasMaxLength(10)
                    .HasColumnName("U_SentStat");

                entity.Property(e => e.USign)
                    .HasMaxLength(2)
                    .HasColumnName("U_sign");

                entity.Property(e => e.USmsText)
                    .HasMaxLength(250)
                    .HasColumnName("U_SmsText");

                entity.Property(e => e.UStatus)
                    .HasMaxLength(80)
                    .HasColumnName("U_status");

                entity.Property(e => e.UpdCardBal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.UpdInvnt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");

                entity.Property(e => e.UpdateTs).HasColumnName("UpdateTS");

                entity.Property(e => e.UseCorrVat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.UseShpdGd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.VatDate).HasColumnType("datetime");

                entity.Property(e => e.VatJenum).HasColumnName("VatJENum");

                entity.Property(e => e.VatPaid).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatPaidFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("VatPaidFC");

                entity.Property(e => e.VatPaidSys).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatPercent).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatSumFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("VatSumFC");

                entity.Property(e => e.VatSumSy).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Vatfirst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VATFirst")
                    .IsFixedLength(true);

                entity.Property(e => e.VatregNum)
                    .HasMaxLength(32)
                    .HasColumnName("VATRegNum");

                entity.Property(e => e.VclPlate).HasMaxLength(20);

                entity.Property(e => e.VersionNum).HasMaxLength(11);

                entity.Property(e => e.Volume).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.WddStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Weight).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Wtapplied)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("WTApplied");

                entity.Property(e => e.WtappliedF)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("WTAppliedF");

                entity.Property(e => e.WtappliedS)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("WTAppliedS");

                entity.Property(e => e.Wtdetails)
                    .HasMaxLength(100)
                    .HasColumnName("WTDetails");

                entity.Property(e => e.Wtsum)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("WTSum");

                entity.Property(e => e.WtsumFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("WTSumFC");

                entity.Property(e => e.WtsumSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("WTSumSC");
            });

            modelBuilder.Entity<Owor>(entity =>
            {
                entity.HasKey(e => e.DocEntry)
                    .HasName("OWOR_PRIMARY");

                entity.ToTable("OWOR", "dbo");

                entity.HasIndex(e => new { e.DocNum, e.Pindicator }, "OWOR_NUM")
                    .IsUnique();

                entity.Property(e => e.DocEntry).ValueGeneratedNever();

                entity.Property(e => e.CardCode).HasMaxLength(15);

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.CmpltQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Comments).HasMaxLength(254);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.DueDate).HasColumnType("datetime");

                entity.Property(e => e.ItemCode).HasMaxLength(20);

                entity.Property(e => e.JrnlMemo).HasMaxLength(50);

                entity.Property(e => e.OcrCode).HasMaxLength(8);

                entity.Property(e => e.OcrCode2).HasMaxLength(8);

                entity.Property(e => e.OcrCode3).HasMaxLength(8);

                entity.Property(e => e.OcrCode4).HasMaxLength(8);

                entity.Property(e => e.OcrCode5).HasMaxLength(8);

                entity.Property(e => e.OriginType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PickRmrk).HasMaxLength(254);

                entity.Property(e => e.Pindicator)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("PIndicator");

                entity.Property(e => e.PlannedQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PostDate).HasColumnType("datetime");

                entity.Property(e => e.Printed)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Project).HasMaxLength(20);

                entity.Property(e => e.RjctQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.RlsDate).HasColumnType("datetime");

                entity.Property(e => e.SeriesStr).HasMaxLength(3);

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.SubStr).HasMaxLength(3);

                entity.Property(e => e.SupplCode).HasMaxLength(254);

                entity.Property(e => e.Type)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.UAltPath)
                    .HasMaxLength(254)
                    .HasColumnName("U_AltPath");

                entity.Property(e => e.UCustSeed)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("U_CustSeed")
                    .IsFixedLength(true);

                entity.Property(e => e.UPassNum).HasColumnName("U_PassNum");

                entity.Property(e => e.USedrRprt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("U_SedrRprt")
                    .IsFixedLength(true);

                entity.Property(e => e.USlineNum).HasColumnName("U_SLineNum");

                entity.Property(e => e.UYeshZraiim)
                    .HasMaxLength(10)
                    .HasColumnName("U_YeshZraiim");

                entity.Property(e => e.UYeshZraim)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("U_YeshZraim")
                    .IsFixedLength(true);

                entity.Property(e => e.Uom).HasMaxLength(100);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");

                entity.Property(e => e.Warehouse).HasMaxLength(8);

                entity.Property(e => e.Wor1count).HasColumnName("WOR1Count");
            });

            modelBuilder.Entity<Passport>(entity =>
            {
                entity.HasKey(e => e.DocEntry)
                    .HasName("KPASSPORT_PR");

                entity.ToTable("@PASSPORT", "dbo");

                entity.HasIndex(e => e.DocNum, "IX_@PASSPORT_DocNum");

                entity.Property(e => e.DocEntry).ValueGeneratedNever();

                entity.Property(e => e.Canceled)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.Creator).HasMaxLength(8);

                entity.Property(e => e.DataSource)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Handwrtten)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Object).HasMaxLength(20);

                entity.Property(e => e.Remark).HasColumnType("ntext");

                entity.Property(e => e.RequestStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Transfered)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.UBatchCheck)
                    .HasColumnType("ntext")
                    .HasColumnName("U_BatchCheck");

                entity.Property(e => e.UBatchNum)
                    .HasMaxLength(20)
                    .HasColumnName("U_BatchNum");

                entity.Property(e => e.UBatchavg)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_batchavg");

                entity.Property(e => e.UBplntPct)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_BplntPct");

                entity.Property(e => e.UBplntTr)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_BPlntTr");

                entity.Property(e => e.UDateCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("U_DateCrea");

                entity.Property(e => e.UDateEnd)
                    .HasColumnType("datetime")
                    .HasColumnName("U_DateEnd");

                entity.Property(e => e.UDateMxGr)
                    .HasColumnType("datetime")
                    .HasColumnName("U_DateMxGr");

                entity.Property(e => e.UDateSow)
                    .HasColumnType("datetime")
                    .HasColumnName("U_DateSow");

                entity.Property(e => e.UGamlon)
                    .HasMaxLength(20)
                    .HasColumnName("U_Gamlon");

                entity.Property(e => e.UGermPrct)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_GermPrct");

                entity.Property(e => e.UGrnHos)
                    .HasMaxLength(20)
                    .HasColumnName("U_GrnHos");

                entity.Property(e => e.UGroomTemp)
                    .HasMaxLength(10)
                    .HasColumnName("U_GroomTemp");

                entity.Property(e => e.UItemAvg)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_ItemAvg");

                entity.Property(e => e.UItemCode)
                    .HasMaxLength(20)
                    .HasColumnName("U_ItemCode");

                entity.Property(e => e.UItemDesc)
                    .HasMaxLength(100)
                    .HasColumnName("U_ItemDesc");

                entity.Property(e => e.ULossPct)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_LossPct");

                entity.Property(e => e.UMachine)
                    .HasMaxLength(20)
                    .HasColumnName("U_Machine");

                entity.Property(e => e.UNights)
                    .HasMaxLength(10)
                    .HasColumnName("U_Nights");

                entity.Property(e => e.UNotGrow)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_NotGrow");

                entity.Property(e => e.UNote1)
                    .HasMaxLength(30)
                    .HasColumnName("U_Note1");

                entity.Property(e => e.UNote2)
                    .HasMaxLength(30)
                    .HasColumnName("U_Note2");

                entity.Property(e => e.UNote3)
                    .HasMaxLength(30)
                    .HasColumnName("U_Note3");

                entity.Property(e => e.UNote4)
                    .HasMaxLength(30)
                    .HasColumnName("U_Note4");

                entity.Property(e => e.UNotes)
                    .HasColumnType("ntext")
                    .HasColumnName("U_Notes");

                entity.Property(e => e.UPassNum)
                    .HasMaxLength(20)
                    .HasColumnName("U_PassNum");

                entity.Property(e => e.UPassSirs)
                    .HasMaxLength(50)
                    .HasColumnName("U_PassSirs");

                entity.Property(e => e.UPassStat)
                    .HasMaxLength(20)
                    .HasColumnName("U_PassStat");

                entity.Property(e => e.UPeat)
                    .HasMaxLength(10)
                    .HasColumnName("U_Peat");

                entity.Property(e => e.UPostSort)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_PostSort");

                entity.Property(e => e.UPreSort)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_PreSort");

                entity.Property(e => e.UQuanElim)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_QuanElim");

                entity.Property(e => e.UQuanInvt)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_QuanInvt");

                entity.Property(e => e.UQuanOrdI)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_QuanOrdI");

                entity.Property(e => e.UQuanOrdP)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_QuanOrdP");

                entity.Property(e => e.UQuanProd)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_QuanProd");

                entity.Property(e => e.UQuanSpar)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_QuanSpar");

                entity.Property(e => e.URecTray)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_RecTray");

                entity.Property(e => e.USeedComp)
                    .HasMaxLength(100)
                    .HasColumnName("U_SeedComp");

                entity.Property(e => e.USowTemp)
                    .HasMaxLength(10)
                    .HasColumnName("U_SowTemp");

                entity.Property(e => e.USowrName)
                    .HasMaxLength(50)
                    .HasColumnName("U_sowrName");

                entity.Property(e => e.USplntPct)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_SPlntPct");

                entity.Property(e => e.USplntTr)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_SPlntTr");

                entity.Property(e => e.UTimeSow).HasColumnName("U_TimeSow");

                entity.Property(e => e.UTrLoss)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_TrLoss");

                entity.Property(e => e.UTrayAvrg)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_TrayAvrg");

                entity.Property(e => e.UTrayGre)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_TrayGre");

                entity.Property(e => e.UTraySow)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_TraySow");

                entity.Property(e => e.UZanZl)
                    .HasMaxLength(20)
                    .HasColumnName("U_Zan_ZL");

                entity.Property(e => e.UZraCoef)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_ZraCoef");

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PassportAuditForm>(entity =>
            {
                entity.Property(e => e.AuditStatus).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.KPassportId).HasColumnName("K_PassportId");

                entity.Property(e => e.Remark).HasMaxLength(1000);

                entity.Property(e => e.UserName).HasMaxLength(50);
            });
     
            modelBuilder.Entity<Passprod>(entity =>
            {               
                entity.HasKey(e => new { e.DocEntry, e.LineId })
                    .HasName("KPASSPROD_PR");

                entity.ToTable("@PASSPROD", "dbo");

                entity.Property(e => e.Object).HasMaxLength(20);

                entity.Property(e => e.UComments)
                    .HasColumnType("ntext")
                    .HasColumnName("U_Comments");

                entity.Property(e => e.UCustName)
                    .HasMaxLength(50)
                    .HasColumnName("U_CustName");

                entity.Property(e => e.UCustSeed)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("U_CustSeed")
                    .IsFixedLength(true);

                entity.Property(e => e.UDateSupp)
                    .HasColumnType("datetime")
                    .HasColumnName("U_DateSupp");

                entity.Property(e => e.UPqtyOpn)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_PQtyOpn");

                entity.Property(e => e.UProdEntr)
                    .HasMaxLength(20)
                    .HasColumnName("U_ProdEntr");

                entity.Property(e => e.UProdNum)
                    .HasMaxLength(20)
                    .HasColumnName("U_ProdNum");

                entity.Property(e => e.UQuaOpen)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_QuaOpen");

                entity.Property(e => e.UQuantity)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_Quantity");

                entity.Property(e => e.USaleLine)
                    .HasMaxLength(10)
                    .HasColumnName("U_SaleLine");

                entity.Property(e => e.USaleNum)
                    .HasMaxLength(20)
                    .HasColumnName("U_SaleNum");
            });

            modelBuilder.Entity<Rdr1>(entity =>
            {
                entity.HasKey(e => new { e.DocEntry, e.LineNum })
                    .HasName("RDR1_PRIMARY");

                entity.ToTable("RDR1", "dbo");

                entity.HasIndex(e => e.AcctCode, "RDR1_ACCOUNT");

                entity.HasIndex(e => new { e.BaseEntry, e.BaseType, e.BaseLine }, "RDR1_BASE_ENTRY");

                entity.HasIndex(e => e.Currency, "RDR1_CURRENCY");

                entity.HasIndex(e => new { e.ItemCode, e.WhsCode, e.OpenQty }, "RDR1_ITM_WHS_OQ");

                entity.HasIndex(e => new { e.ItemCode, e.WhsCode, e.ShipDate }, "RDR1_ITM_WHS_SH");

                entity.HasIndex(e => e.OwnerCode, "RDR1_OWNER_CODE");

                entity.HasIndex(e => e.LineStatus, "RDR1_STATUS");

                entity.HasIndex(e => new { e.DocEntry, e.VisOrder }, "RDR1_VIS_ORDER");

                entity.Property(e => e.AcctCode).HasMaxLength(15);

                entity.Property(e => e.ActDelDate).HasColumnType("datetime");

                entity.Property(e => e.Address).HasMaxLength(254);

                entity.Property(e => e.AssblValue).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BackOrdr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.BaseAtCard).HasMaxLength(100);

                entity.Property(e => e.BaseCard).HasMaxLength(15);

                entity.Property(e => e.BaseOpnQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BasePrice)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.BaseQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.BaseRef).HasMaxLength(16);

                entity.Property(e => e.BlockNum).HasMaxLength(100);

                entity.Property(e => e.Ceecflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CEECFlag")
                    .IsFixedLength(true);

                entity.Property(e => e.Cfopcode)
                    .HasMaxLength(6)
                    .HasColumnName("CFOPCode");

                entity.Property(e => e.ChgAsmBoMw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ChgAsmBoMW")
                    .IsFixedLength(true);

                entity.Property(e => e.CodeBars).HasMaxLength(254);

                entity.Property(e => e.CogsAcct).HasMaxLength(15);

                entity.Property(e => e.CogsOcrCo2).HasMaxLength(8);

                entity.Property(e => e.CogsOcrCo3).HasMaxLength(8);

                entity.Property(e => e.CogsOcrCo4).HasMaxLength(8);

                entity.Property(e => e.CogsOcrCo5).HasMaxLength(8);

                entity.Property(e => e.CogsOcrCod).HasMaxLength(8);

                entity.Property(e => e.Commission).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ConsumeFct)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ConsumeFCT")
                    .IsFixedLength(true);

                entity.Property(e => e.CountryOrg).HasMaxLength(3);

                entity.Property(e => e.CredOrigin)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Cstcode)
                    .HasMaxLength(6)
                    .HasColumnName("CSTCode");

                entity.Property(e => e.CstfCofins)
                    .HasMaxLength(2)
                    .HasColumnName("CSTfCOFINS");

                entity.Property(e => e.CstfIpi)
                    .HasMaxLength(2)
                    .HasColumnName("CSTfIPI");

                entity.Property(e => e.CstfPis)
                    .HasMaxLength(2)
                    .HasColumnName("CSTfPIS");

                entity.Property(e => e.Currency).HasMaxLength(3);

                entity.Property(e => e.DedVatSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DedVatSumF).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DedVatSumS).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DefBreak).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DeferrTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DelivrdQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DescOw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DescOW")
                    .IsFixedLength(true);

                entity.Property(e => e.DetailsOw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DetailsOW")
                    .IsFixedLength(true);

                entity.Property(e => e.DiscPrcnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DistribExp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DistribIs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DistribIS")
                    .IsFixedLength(true);

                entity.Property(e => e.DistribSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.DocDate).HasColumnType("datetime");

                entity.Property(e => e.DropShip)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Dscription).HasMaxLength(100);

                entity.Property(e => e.DstrbSumFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("DstrbSumFC");

                entity.Property(e => e.DstrbSumSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("DstrbSumSC");

                entity.Property(e => e.EnSetCost)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.EquVatPer).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.EquVatSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.EquVatSumF).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.EquVatSumS).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ExLineNo).HasMaxLength(10);

                entity.Property(e => e.Excisable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ExciseAmt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Factor1).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Factor2).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Factor3).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Factor4).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.FreeChrgBp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FreeChrgBP")
                    .IsFixedLength(true);

                entity.Property(e => e.FreeTxt).HasMaxLength(100);

                entity.Property(e => e.FromWhsCod).HasMaxLength(8);

                entity.Property(e => e.GpttlBasPr)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("GPTtlBasPr");

                entity.Property(e => e.GrossBuyPr).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.GrssProfFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("GrssProfFC");

                entity.Property(e => e.GrssProfSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("GrssProfSC");

                entity.Property(e => e.GrssProfit).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Gtotal)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("GTotal");

                entity.Property(e => e.GtotalFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("GTotalFC");

                entity.Property(e => e.GtotalSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("GTotalSC");

                entity.Property(e => e.Height1).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Height2).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ImportLog).HasMaxLength(20);

                entity.Property(e => e.Inmprice)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("INMPrice");

                entity.Property(e => e.InvQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.InvQtyOnly)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.InvntSttus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsAqcuistn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsByPrdct)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsSrvCall)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("isSrvCall")
                    .IsFixedLength(true);

                entity.Property(e => e.Isdistrb)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("ISDistrb");

                entity.Property(e => e.IsdistrbFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("ISDistrbFC");

                entity.Property(e => e.IsdistrbSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("ISDistrbSC");

                entity.Property(e => e.ItemCode).HasMaxLength(20);

                entity.Property(e => e.LegalText).HasMaxLength(254);

                entity.Property(e => e.Length1).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Length2)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("length2");

                entity.Property(e => e.LicTradNum).HasMaxLength(32);

                entity.Property(e => e.LinManClsd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.LinePoPrss)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.LineStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.LineTotal).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.LineType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.LineVat).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.LineVatS).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.LineVatlF).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.LineVendor).HasMaxLength(15);

                entity.Property(e => e.LnExcised)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.LstBinmpr)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("LstBINMPr");

                entity.Property(e => e.LstByDsFc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.LstByDsSc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.LstByDsSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.NeedQty)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.NoInvtryMv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.NumPerMsr).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.NumPerMsr2).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ObjType).HasMaxLength(20);

                entity.Property(e => e.OcrCode).HasMaxLength(8);

                entity.Property(e => e.OcrCode2).HasMaxLength(8);

                entity.Property(e => e.OcrCode3).HasMaxLength(8);

                entity.Property(e => e.OcrCode4).HasMaxLength(8);

                entity.Property(e => e.OcrCode5).HasMaxLength(8);

                entity.Property(e => e.OpenCreQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OpenInvQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OpenQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OpenRtnQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OpenSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OpenSumFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("OpenSumFC");

                entity.Property(e => e.OpenSumSys).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OrderedQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.OrigItem).HasMaxLength(20);

                entity.Property(e => e.PackQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PartRetire)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PcQuantity).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PickOty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PickStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PoTrgEntry).HasMaxLength(11);

                entity.Property(e => e.PostTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.PqtreqDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PQTReqDate");

                entity.Property(e => e.PqtreqQty)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("PQTReqQty");

                entity.Property(e => e.Price).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PriceAfVat)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("PriceAfVAT");

                entity.Property(e => e.PriceBefDi).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.PriceEdit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Project).HasMaxLength(20);

                entity.Property(e => e.QtyToShip).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Quantity).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Rate).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ReleasQtty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.RetCost).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.RetirApcfc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("RetirAPCFC");

                entity.Property(e => e.RetirApcsc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("RetirAPCSC");

                entity.Property(e => e.RetireApc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("RetireAPC");

                entity.Property(e => e.RetireQty).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Rg23apart1).HasColumnName("RG23APart1");

                entity.Property(e => e.Rg23apart2).HasColumnName("RG23APart2");

                entity.Property(e => e.Rg23cpart1).HasColumnName("RG23CPart1");

                entity.Property(e => e.Rg23cpart2).HasColumnName("RG23CPart2");

                entity.Property(e => e.SerialNum).HasMaxLength(17);

                entity.Property(e => e.ShipDate).HasColumnType("datetime");

                entity.Property(e => e.ShipToCode).HasMaxLength(50);

                entity.Property(e => e.ShipToDesc).HasMaxLength(254);

                entity.Property(e => e.Shortages).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.SpecPrice)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.StckAppD).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.StckAppDfc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("StckAppDFC");

                entity.Property(e => e.StckAppDsc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("StckAppDSC");

                entity.Property(e => e.StckAppFc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.StckAppSc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.StckDstFc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.StckDstSc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.StckDstSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.StckInmpr)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("StckINMPr");

                entity.Property(e => e.StckSumApp).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.StockPrice).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.StockSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.StockSumFc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.StockSumSc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.StockValue).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.SubCatNum).HasMaxLength(20);

                entity.Property(e => e.Surpluses).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Sww)
                    .HasMaxLength(16)
                    .HasColumnName("SWW");

                entity.Property(e => e.TaxCode).HasMaxLength(8);

                entity.Property(e => e.TaxDistSfc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("TaxDistSFC");

                entity.Property(e => e.TaxDistSsc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("TaxDistSSC");

                entity.Property(e => e.TaxDistSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TaxOnly)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.TaxPerUnit).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TaxRelev)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.TaxStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.TaxType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Text).HasColumnType("ntext");

                entity.Property(e => e.ThirdParty)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.ToDiff).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ToStock).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TotInclTax).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TotalFrgn).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TotalSumSy).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.TranType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.TreeType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.UAriza)
                    .HasMaxLength(15)
                    .HasColumnName("U_Ariza");

                entity.Property(e => e.UBsyFprice)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_bsyFPrice");

                entity.Property(e => e.UBsyMsupId)
                    .HasMaxLength(15)
                    .HasColumnName("U_bsyMSupID");

                entity.Property(e => e.UCustSeed)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("U_CustSeed")
                    .IsFixedLength(true);

                entity.Property(e => e.UDateEnd)
                    .HasColumnType("datetime")
                    .HasColumnName("U_DateEnd");

                entity.Property(e => e.UDrctDebt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("U_DrctDebt")
                    .IsFixedLength(true);

                entity.Property(e => e.UFromInvt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("U_FromInvt")
                    .IsFixedLength(true);

                entity.Property(e => e.UGamlon10)
                    .HasMaxLength(2)
                    .HasColumnName("U_gamlon10");

                entity.Property(e => e.UGrowDays).HasColumnName("U_GrowDays");

                entity.Property(e => e.UHamama)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("U_hamama")
                    .IsFixedLength(true);

                entity.Property(e => e.ULastPrice).HasColumnName("U_LastPrice");

                entity.Property(e => e.ULineNum).HasColumnName("U_LineNum");

                entity.Property(e => e.ULpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("U_LPDate");

                entity.Property(e => e.UMagash10)
                    .HasMaxLength(10)
                    .HasColumnName("U_magash10");

                entity.Property(e => e.UMemoza)
                    .HasMaxLength(10)
                    .HasColumnName("U_memoza");

                entity.Property(e => e.UMishkalelef)
                    .HasMaxLength(10)
                    .HasColumnName("U_mishkalelef");

                entity.Property(e => e.UNevitatest)
                    .HasColumnType("datetime")
                    .HasColumnName("U_nevitatest");

                entity.Property(e => e.UOrLastPrice).HasColumnName("U_OrLastPrice");

                entity.Property(e => e.UOrLpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("U_OrLPDate");

                entity.Property(e => e.UOrdrNum).HasColumnName("U_OrdrNum");

                entity.Property(e => e.UPassExt)
                    .HasColumnType("datetime")
                    .HasColumnName("U_PassExt");

                entity.Property(e => e.UPassNum).HasColumnName("U_PassNum");

                entity.Property(e => e.UPassport10)
                    .HasMaxLength(20)
                    .HasColumnName("U_passport10");

                entity.Property(e => e.UPrintLine)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("U_PrintLine")
                    .IsFixedLength(true);

                entity.Property(e => e.UProdNum)
                    .HasMaxLength(20)
                    .HasColumnName("U_ProdNum");

                entity.Property(e => e.UQuanInvt)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("U_QuanInvt");

                entity.Property(e => e.UZriaa)
                    .HasColumnType("datetime")
                    .HasColumnName("U_zriaa");

                entity.Property(e => e.UnitMsr)
                    .HasMaxLength(100)
                    .HasColumnName("unitMsr");

                entity.Property(e => e.UnitMsr2)
                    .HasMaxLength(100)
                    .HasColumnName("unitMsr2");

                entity.Property(e => e.UomCode).HasMaxLength(20);

                entity.Property(e => e.UomCode2).HasMaxLength(20);

                entity.Property(e => e.UpdInvntry)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.UseBaseUn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.VatAppld).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatAppldFc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("VatAppldFC");

                entity.Property(e => e.VatAppldSc)
                    .HasColumnType("numeric(19, 6)")
                    .HasColumnName("VatAppldSC");

                entity.Property(e => e.VatDscntPr).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatGroup).HasMaxLength(8);

                entity.Property(e => e.VatGrpSrc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.VatPrcnt).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatSum).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatSumFrgn).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatSumSy).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatWoDpm).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatWoDpmFc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VatWoDpmSc).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.VendorNum).HasMaxLength(17);

                entity.Property(e => e.Volume).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Weight1).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Weight2).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.WhsCode).HasMaxLength(8);

                entity.Property(e => e.Width1).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Width2).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.WtCalced)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.WtLiable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<UpdateKPassportAudit>(entity =>
            {
                entity.ToTable("UpdateK_PassportAudit");

                entity.Property(e => e.UpdateKPassportAuditId).HasColumnName("UpdateK_PassportAuditId");

                entity.Property(e => e.Avgafter)
                    .HasMaxLength(50)
                    .HasColumnName("AVGAfter");

                entity.Property(e => e.Avgbefore)
                    .HasMaxLength(50)
                    .HasColumnName("AVGBefore");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.GamAfter).HasMaxLength(50);

                entity.Property(e => e.GamBefore).HasMaxLength(50);

                entity.Property(e => e.HamAfter).HasMaxLength(50);

                entity.Property(e => e.HamBefore).HasMaxLength(50);

                entity.Property(e => e.KPassportId).HasColumnName("K_PassportId");

                entity.Property(e => e.MagAfter).HasMaxLength(50);

                entity.Property(e => e.MagBefore).HasMaxLength(50);

                entity.Property(e => e.StatAfter).HasMaxLength(50);

                entity.Property(e => e.StatBefore).HasMaxLength(50);

                entity.Property(e => e.UserName).HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}